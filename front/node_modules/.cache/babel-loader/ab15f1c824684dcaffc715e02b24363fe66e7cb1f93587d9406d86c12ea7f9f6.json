{"ast":null,"code":"import axios from 'axios';\nimport PhotoProfile from './PhotoProfile.vue';\nexport default {\n  data() {\n    return {\n      user_list: [],\n      // 페이징\n      totalPosts: 0,\n      currentPage: 1,\n      perPage: 10\n    };\n  },\n  components: {\n    PhotoProfile\n  },\n  mounted() {\n    this.userList();\n  },\n  created() {\n    this.fetchPosts();\n  },\n  methods: {\n    userList() {\n      axios.post(`${this.$BackURL}/userList`, {}).then(response => {\n        console.log(response.data);\n        if (response.data.status == 'success') {\n          this.user_list = response.data.res;\n        } else {\n          console.log('오류발생 새로고침해주세요.');\n        }\n      }).catch(error => {\n        alert('Theme오류 새로고침해주세요.');\n        console.error('Error uploading file:', error);\n      });\n    },\n    async fetchPosts(page = this.currentPage) {\n      try {\n        // api 요청 \n        const postsResponse = await axios.get(`${this.$BackURL}/boardList`, {\n          params: {\n            category_id: this.selectedCategory,\n            page: page,\n            per_page: this.perPage\n          }\n        });\n        // response\n        if (postsResponse.data.status === 'success') {\n          this.posts = postsResponse.data.res;\n        } else {\n          console.error('Failed to fetch posts:', postsResponse.data.message);\n        }\n\n        // total posts\n        const totalPostsResponse = await axios.get(`${this.$BackURL}/boardListPage`, {\n          params: {\n            category_id: this.selectedCategory\n          }\n        });\n        // response\n        if (totalPostsResponse.data.status === 'success') {\n          if (totalPostsResponse.data.res[0].total_posts == 0) {\n            // 데이터가 없는경우\n            this.totalPosts = 1;\n          } else {\n            this.totalPosts = totalPostsResponse.data.res[0].total_posts;\n          }\n        } else {\n          console.error('Failed to fetch total posts:', totalPostsResponse.data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching posts or total posts:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","PhotoProfile","data","user_list","totalPosts","currentPage","perPage","components","mounted","userList","created","fetchPosts","methods","post","$BackURL","then","response","console","log","status","res","catch","error","alert","page","postsResponse","get","params","category_id","selectedCategory","per_page","posts","message","totalPostsResponse","total_posts"],"sources":["/var/www/front/src/components/Photo/MainPhoto.vue"],"sourcesContent":["<template>\n    <div class=\"d-flex flex-wrap\">\n        <PhotoProfile v-for=\"(userprofile,index) in user_list\" :key=\"index\" :userprofile=\"userprofile\"/>\n    </div>\n</template>\n<script>\nimport axios  from 'axios';\nimport PhotoProfile from './PhotoProfile.vue';\n\nexport default {\n    data(){\n        return{\n            user_list: [],\n            // 페이징\n            totalPosts: 0,\n            currentPage: 1,\n            perPage: 10,\n        }\n    },\n    components:{\n        PhotoProfile,\n    },\n    mounted() {\n        this.userList();\n    },\n    created() {\n      this.fetchPosts();\n    },\n    methods: {\n        userList(){\n            axios.post(`${this.$BackURL}/userList`, {\n\n            }).then(response => {\n                console.log(response.data);\n                if (response.data.status == 'success') {\n                    this.user_list = response.data.res;\n                } else {\n                    console.log('오류발생 새로고침해주세요.');\n                }\n            }).catch(error => {\n                alert('Theme오류 새로고침해주세요.');\n                console.error('Error uploading file:', error);\n            });\n        },\n        async fetchPosts(page = this.currentPage) {\n            try {\n            // api 요청 \n            const postsResponse = await axios.get(`${this.$BackURL}/boardList`, {\n                params: {\n                category_id: this.selectedCategory,\n                page: page,\n                per_page: this.perPage\n                }\n            });\n            // response\n            if (postsResponse.data.status === 'success') {\n                this.posts = postsResponse.data.res;\n            } else {\n                console.error('Failed to fetch posts:', postsResponse.data.message);\n            }\n    \n            // total posts\n            const totalPostsResponse = await axios.get(`${this.$BackURL}/boardListPage`, {\n                params: {\n                category_id: this.selectedCategory\n                }\n            });\n            // response\n            if (totalPostsResponse.data.status === 'success') {\n                if (totalPostsResponse.data.res[0].total_posts == 0){\n                // 데이터가 없는경우\n                this.totalPosts = 1; \n                }else{\n                this.totalPosts = totalPostsResponse.data.res[0].total_posts;\n                }\n            } else {\n                console.error('Failed to fetch total posts:', totalPostsResponse.data.message);\n            }\n            } catch (error) {\n            console.error('Error fetching posts or total posts:', error);\n            }\n        },\n    }\n}\n</script>\n<style>\n\n</style>"],"mappings":"AAMA,OAAOA,KAAI,MAAQ,OAAO;AAC1B,OAAOC,YAAW,MAAO,oBAAoB;AAE7C,eAAe;EACXC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,SAAS,EAAE,EAAE;MACb;MACAC,UAAU,EAAE,CAAC;MACbC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,UAAU,EAAC;IACPN;EACJ,CAAC;EACDO,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,QAAQ,CAAC,CAAC;EACnB,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACLH,QAAQA,CAAA,EAAE;MACNT,KAAK,CAACa,IAAI,CAAC,GAAG,IAAI,CAACC,QAAQ,WAAW,EAAE,CAExC,CAAC,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACd,IAAI,CAAC;QAC1B,IAAIc,QAAQ,CAACd,IAAI,CAACiB,MAAK,IAAK,SAAS,EAAE;UACnC,IAAI,CAAChB,SAAQ,GAAIa,QAAQ,CAACd,IAAI,CAACkB,GAAG;QACtC,OAAO;UACHH,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QACjC;MACJ,CAAC,CAAC,CAACG,KAAK,CAACC,KAAI,IAAK;QACdC,KAAK,CAAC,mBAAmB,CAAC;QAC1BN,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN,CAAC;IACD,MAAMX,UAAUA,CAACa,IAAG,GAAI,IAAI,CAACnB,WAAW,EAAE;MACtC,IAAI;QACJ;QACA,MAAMoB,aAAY,GAAI,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,GAAG,IAAI,CAACZ,QAAQ,YAAY,EAAE;UAChEa,MAAM,EAAE;YACRC,WAAW,EAAE,IAAI,CAACC,gBAAgB;YAClCL,IAAI,EAAEA,IAAI;YACVM,QAAQ,EAAE,IAAI,CAACxB;UACf;QACJ,CAAC,CAAC;QACF;QACA,IAAImB,aAAa,CAACvB,IAAI,CAACiB,MAAK,KAAM,SAAS,EAAE;UACzC,IAAI,CAACY,KAAI,GAAIN,aAAa,CAACvB,IAAI,CAACkB,GAAG;QACvC,OAAO;UACHH,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEG,aAAa,CAACvB,IAAI,CAAC8B,OAAO,CAAC;QACvE;;QAEA;QACA,MAAMC,kBAAiB,GAAI,MAAMjC,KAAK,CAAC0B,GAAG,CAAC,GAAG,IAAI,CAACZ,QAAQ,gBAAgB,EAAE;UACzEa,MAAM,EAAE;YACRC,WAAW,EAAE,IAAI,CAACC;UAClB;QACJ,CAAC,CAAC;QACF;QACA,IAAII,kBAAkB,CAAC/B,IAAI,CAACiB,MAAK,KAAM,SAAS,EAAE;UAC9C,IAAIc,kBAAkB,CAAC/B,IAAI,CAACkB,GAAG,CAAC,CAAC,CAAC,CAACc,WAAU,IAAK,CAAC,EAAC;YACpD;YACA,IAAI,CAAC9B,UAAS,GAAI,CAAC;UACnB,CAAC,MAAI;YACL,IAAI,CAACA,UAAS,GAAI6B,kBAAkB,CAAC/B,IAAI,CAACkB,GAAG,CAAC,CAAC,CAAC,CAACc,WAAW;UAC5D;QACJ,OAAO;UACHjB,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAEW,kBAAkB,CAAC/B,IAAI,CAAC8B,OAAO,CAAC;QAClF;MACA,EAAE,OAAOV,KAAK,EAAE;QAChBL,OAAO,CAACK,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5D;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}