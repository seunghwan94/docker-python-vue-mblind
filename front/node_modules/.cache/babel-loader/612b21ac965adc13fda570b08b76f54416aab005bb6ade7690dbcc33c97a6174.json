{"ast":null,"code":"export default {\n  props: {\n    listValue: Object,\n    title: String\n  },\n  methods: {\n    formatDate(dateString) {\n      let date = new Date(dateString);\n      let year = date.getFullYear();\n      let month = ('0' + (date.getMonth() + 1)).slice(-2);\n      let day = ('0' + date.getDate()).slice(-2);\n      let hours = ('0' + date.getHours()).slice(-2);\n      let minutes = ('0' + date.getMinutes()).slice(-2);\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\n    }\n  },\n  stripHtml(html) {\n    let doc = new DOMParser().parseFromString(html, 'text/html');\n    let text = doc.body.textContent || \"\";\n    if (text.length > 20) {\n      text = text.substring(0, 20) + \"...\";\n    }\n    return text;\n  }\n};","map":{"version":3,"names":["props","listValue","Object","title","String","methods","formatDate","dateString","date","Date","year","getFullYear","month","getMonth","slice","day","getDate","hours","getHours","minutes","getMinutes","stripHtml","html","doc","DOMParser","parseFromString","text","body","textContent","length","substring"],"sources":["/var/www/front/src/components/Home/HomeList.vue"],"sourcesContent":["<template>{{ listValue }}\n    <div class=\"card border-primary m-3\" >\n      <div class=\"card-header\">{{ title }}</div>\n      <div class=\"card-body\">\n        <div class=\"card-text d-flex\" style=\"border-bottom: 1px solid lightgray;align-items: center;justify-content: space-between; width: 100%;\">\n          <p class=\"m-0\" style=\"width: 25%;\">카테고리</p>\n          <p class=\"m-0\" style=\"width: 40%;\">제목</p>\n\n          <div class=\"d-flex\" style=\"width: 35%;justify-content: space-between;align-items: center;\">\n            <div class=\"d-flex\" style=\"align-items: center;\">\n              <p class=\"text-body p-2 m-0\">작성자</p>\n            </div>\n            <p class=\"text-body-tertiary pe-2 m-0\"> </p>\n            <p class=\"text-body-tertiary pe-2 m-0\">게시날짜</p>\n\n          </div>\n        </div>\n\n        <div v-for=\"(value, index) in listValue\" :key=\"index\"  class=\"card-text d-flex\" style=\"border-bottom: 1px solid lightgray;align-items: center;justify-content: space-between; width: 100%;\">\n          <p class=\"m-0\" style=\"width: 25%;\">{{ value.category_name }}</p>\n          <p class=\"m-0\" style=\"width: 40%;\">{{ value.title }}</p>\n\n          <div class=\"d-flex\" style=\"width: 35%;justify-content: space-between;align-items: center;\">\n            <div class=\"d-flex\" style=\"align-items: center;\">\n              <img :src=\"require(`../../assets/img/${value.img}`)\" style=\"width: 35px;height:35px; border-radius: 50%; cursor: pointer;\">\n              <p class=\"text-body p-2 m-0\">{{ value.name }}</p>\n            </div>\n            <p class=\"text-body-tertiary pe-2 m-0\"><i class=\"bi bi-eye\"></i> {{ value.view_cnt }} <i class=\"bi bi-chat-dots\"></i> {{ value.comment_cnt }}</p>\n            <p class=\"text-body-tertiary pe-2 m-0\">{{ formatDate(value.create_date) }}</p>\n\n          </div>\n        </div>\n      </div>\n    </div>\n</template>\n<script>\nexport default{\n  props:{\n    listValue : Object,\n    title : String,\n  },\n  methods:{\n    formatDate(dateString) {\n        let date = new Date(dateString);\n        let year = date.getFullYear();\n        let month = ('0' + (date.getMonth() + 1)).slice(-2);\n        let day = ('0' + date.getDate()).slice(-2);\n        let hours = ('0' + date.getHours()).slice(-2);\n        let minutes = ('0' + date.getMinutes()).slice(-2);\n        return `${year}-${month}-${day} ${hours}:${minutes}`;\n      },\n  },\n  stripHtml(html) {\n    let doc = new DOMParser().parseFromString(html, 'text/html');\n    let text = doc.body.textContent || \"\";\n    if (text.length > 20) {\n      text = text.substring(0, 20) + \"...\";\n    }\n    return text;\n  },\n}\n</script>\n<style>\n\n</style>"],"mappings":"AAoCA,eAAc;EACZA,KAAK,EAAC;IACJC,SAAQ,EAAIC,MAAM;IAClBC,KAAI,EAAIC;EACV,CAAC;EACDC,OAAO,EAAC;IACNC,UAAUA,CAACC,UAAU,EAAE;MACnB,IAAIC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MAC/B,IAAIG,IAAG,GAAIF,IAAI,CAACG,WAAW,CAAC,CAAC;MAC7B,IAAIC,KAAI,GAAI,CAAC,GAAE,IAAKJ,IAAI,CAACK,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;MACnD,IAAIC,GAAE,GAAI,CAAC,GAAE,GAAIP,IAAI,CAACQ,OAAO,CAAC,CAAC,EAAEF,KAAK,CAAC,CAAC,CAAC,CAAC;MAC1C,IAAIG,KAAI,GAAI,CAAC,GAAE,GAAIT,IAAI,CAACU,QAAQ,CAAC,CAAC,EAAEJ,KAAK,CAAC,CAAC,CAAC,CAAC;MAC7C,IAAIK,OAAM,GAAI,CAAC,GAAE,GAAIX,IAAI,CAACY,UAAU,CAAC,CAAC,EAAEN,KAAK,CAAC,CAAC,CAAC,CAAC;MACjD,OAAO,GAAGJ,IAAI,IAAIE,KAAK,IAAIG,GAAG,IAAIE,KAAK,IAAIE,OAAO,EAAE;IACtD;EACJ,CAAC;EACDE,SAASA,CAACC,IAAI,EAAE;IACd,IAAIC,GAAE,GAAI,IAAIC,SAAS,CAAC,CAAC,CAACC,eAAe,CAACH,IAAI,EAAE,WAAW,CAAC;IAC5D,IAAII,IAAG,GAAIH,GAAG,CAACI,IAAI,CAACC,WAAU,IAAK,EAAE;IACrC,IAAIF,IAAI,CAACG,MAAK,GAAI,EAAE,EAAE;MACpBH,IAAG,GAAIA,IAAI,CAACI,SAAS,CAAC,CAAC,EAAE,EAAE,IAAI,KAAK;IACtC;IACA,OAAOJ,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}