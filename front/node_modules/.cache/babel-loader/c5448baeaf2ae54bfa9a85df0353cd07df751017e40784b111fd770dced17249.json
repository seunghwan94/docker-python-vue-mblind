{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ModalProfile',\n  data() {\n    return {\n      user_id: sessionStorage.getItem('user_id'),\n      user_name: sessionStorage.getItem('user_name'),\n      user_img: sessionStorage.getItem('user_img'),\n      temp_user_img: ''\n    };\n  },\n  methods: {\n    logout() {\n      if (confirm('logout을 진행하시겠습니까?')) {\n        sessionStorage.removeItem('user_id');\n        sessionStorage.removeItem('user_name');\n        this.user_id = null;\n        this.user_name = null;\n        window.location.reload();\n      }\n    },\n    onFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        // 서버로 파일을 업로드\n        axios.post('http://127.0.0.1:3000/UploadFile', formData).then(response => {\n          if (response.data.success) {\n            this.temp_user_img = response.data.filename;\n          } else {\n            alert('파일 업로드 실패');\n          }\n        }).catch(error => {\n          console.error('Error uploading file:', error);\n        });\n      }\n    },\n    profileChange() {\n      if (confirm('수정하시겠습니까?')) {\n        axios.post('http://127.0.0.1:3000/profileChange', {\n          img_name: this.temp_user_img,\n          user_id: this.user_id,\n          user_name: this.user_name\n        }).then(response => {\n          if (response.data.status == 'success') {\n            sessionStorage.setItem('user_img', this.temp_user_img);\n            this.user_img = this.temp_user_img;\n            this.temp_user_img = '';\n          } else {\n            console.log(response.data);\n            alert('파일 업로드 실패');\n          }\n        }).catch(error => {\n          console.error('Error uploading file:', error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","user_id","sessionStorage","getItem","user_name","user_img","temp_user_img","methods","logout","confirm","removeItem","window","location","reload","onFileUpload","event","file","target","files","formData","FormData","append","post","then","response","success","filename","alert","catch","error","console","profileChange","img_name","status","setItem","log"],"sources":["/var/www/front/src/components/Modal/ModalProfile.vue"],"sourcesContent":["<template>\n    <div class=\"modal-body\">\n        <!-- tab -->\n        <ul class=\"nav nav-tabs\" role=\"tablist\">\n          <li class=\"nav-item\" role=\"presentation\">\n              <a class=\"nav-link active\" data-bs-toggle=\"tab\" href=\"#profile\" aria-selected=\"false\" role=\"tab\" tabindex=\"-1\">Profile</a>\n          </li>\n          <li class=\"nav-item\" role=\"presentation\">\n              <a class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#ChangePW\" aria-selected=\"true\" role=\"tab\">ChangePW</a>\n          </li>\n        </ul>\n        <div id=\"myTabContent\" class=\"tab-content\">\n          <!-- 로그인 -->\n          <div class=\"tab-pane fade active show\" id=\"profile\" role=\"tabpanel\">\n              <div class=\"card border-success m-3\">\n                <div class=\"d-flex m-3\" style=\"justify-content:flex-end;\">\n                  <button type=\"button\" class=\"btn btn-success\" @click=\"logout\">logout</button>\n                </div>\n                <div class=\"d-flex w-100\" style=\"justify-content:center;\">\n                  <img v-if='temp_user_img' class=\"w-50 \" :src=\"require(`../../assets/img/${temp_user_img}`)\" style=\"border-radius: 50%; cursor: pointer;\" @click=\"$refs.imgFlie.click()\">\n                  <img v-else class=\"w-50 \" :src=\"require(`../../assets/img/${user_img}`)\" style=\"border-radius: 50%; cursor: pointer;\" @click=\"$refs.imgFlie.click()\">\n                  <input type=\"file\" ref=\"imgFlie\" @change=\"onFileUpload\" style=\"display: none;\" accept=\"image/*\">\n                </div>\n                <div class=\"card-body\">\n                    <label class=\"form-label mt-4\">이름</label>\n                    <div class=\"form-floating mb-3\">\n                      <input type=\"text\" class=\"form-control\" id=\"user_name\" v-model=\"user_name\" placeholder=\"user_name\">\n                      <label for=\"user_name\">이름</label>\n                    </div>\n                    <!-- 오류 메시지 -->\n                    <div v-if=\"errorMessage\" class=\"alert alert-danger m-3\">\n                      <strong>{{ errorMessage }}</strong>\n                    </div>\n                    <div class=\"d-flex m-3\" style=\"justify-content: center;\">\n                      <button type=\"button\" class=\"btn btn-success\" @click=\"profileChange\">변경하기</button>\n                    </div>\n                </div>\n              </div>\n          </div>\n          <div class=\"tab-pane fade\" id=\"ChangePW\" role=\"tabpanel\">\n            <div class=\"card border-success m-3\" style=\"padding:16px\">\n              <label class=\"form-label mt-4\">비밀번호 변경</label>\n              <div class=\"form-floating\">\n                <input type=\"password\" class=\"form-control\" id=\"LoginPW\" v-model=\"loginPW\" placeholder=\"LoginPW\" autocomplete=\"off\">\n                <label for=\"LoginPW\">기존 비밀번호를 입력하세요.</label>\n              </div>\n              <div class=\"form-floating mt-4\">\n                <input type=\"password\" class=\"form-control\" id=\"newLoginPW\" v-model=\"newLoginPW\" placeholder=\"LoginPW\" autocomplete=\"off\">\n                <label for=\"newLoginPW\">새 비밀번호를 입력하세요.</label>\n              </div>\n              <div class=\"form-floating mt-4\">\n                <input type=\"password\" class=\"form-control\" id=\"newLoginPWChack\" v-model=\"newLoginPWChack\" placeholder=\"LoginPW\" autocomplete=\"off\">\n                <label for=\"newLoginPWChack\">새 비밀번호 확인</label>\n              </div>\n              <!-- 오류 메시지 -->\n              <div v-if=\"errorMessage\" class=\"alert alert-danger m-3\">\n                <strong>{{ errorMessage }}</strong>\n              </div>\n              <div class=\"d-flex m-3\" style=\"justify-content: center;\">\n                <button type=\"button\" class=\"btn btn-success\" @click=\"profileChange\">비밀번호 변경하기</button>\n              </div>\n            </div>\n          </div>\n        </div>\n    </div>\n  </template>\n  <script>\n  import axios  from 'axios';\n\n  export default {\n    name: 'ModalProfile',\n    data() {\n      return{\n        user_id: sessionStorage.getItem('user_id'),\n        user_name: sessionStorage.getItem('user_name'),\n        user_img: sessionStorage.getItem('user_img'),\n        temp_user_img : '',\n      }\n    },\n    methods: {\n      logout() {\n        if (confirm('logout을 진행하시겠습니까?')) {\n          sessionStorage.removeItem('user_id');\n          sessionStorage.removeItem('user_name');\n          \n          this.user_id = null;\n          this.user_name = null;\n          \n          window.location.reload();\n        }\n      },\n      onFileUpload(event) {\n        const file = event.target.files[0];\n        if (file) {\n          const formData = new FormData();\n          formData.append('file', file);\n\n          // 서버로 파일을 업로드\n          axios.post('http://127.0.0.1:3000/UploadFile', formData)\n            .then(response => {\n              if (response.data.success) {\n                this.temp_user_img = response.data.filename;\n              } else {\n                alert('파일 업로드 실패');\n              }\n            }).catch(error => {\n              console.error('Error uploading file:', error);\n          });\n        }\n      },\n      profileChange() {\n        if(confirm('수정하시겠습니까?')){\n          axios.post('http://127.0.0.1:3000/profileChange', {\n            img_name: this.temp_user_img,\n            user_id : this.user_id,\n            user_name : this.user_name  \n          }).then(response => {\n            if (response.data.status == 'success') {\n              sessionStorage.setItem('user_img',this.temp_user_img);\n              this.user_img = this.temp_user_img;\n              this.temp_user_img = '';\n            } else {\n              console.log(response.data,);\n              alert('파일 업로드 실패');\n            }\n          }).catch(error => {\n            console.error('Error uploading file:', error);\n          });\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style>\n\n  </style>"],"mappings":"AAmEE,OAAOA,KAAI,MAAQ,OAAO;AAE1B,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAM;MACJC,OAAO,EAAEC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;MAC1CC,SAAS,EAAEF,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;MAC9CE,QAAQ,EAAEH,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;MAC5CG,aAAY,EAAI;IAClB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAIC,OAAO,CAAC,mBAAmB,CAAC,EAAE;QAChCP,cAAc,CAACQ,UAAU,CAAC,SAAS,CAAC;QACpCR,cAAc,CAACQ,UAAU,CAAC,WAAW,CAAC;QAEtC,IAAI,CAACT,OAAM,GAAI,IAAI;QACnB,IAAI,CAACG,SAAQ,GAAI,IAAI;QAErBO,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B;IACF,CAAC;IACDC,YAAYA,CAACC,KAAK,EAAE;MAClB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;;QAE7B;QACAlB,KAAK,CAACwB,IAAI,CAAC,kCAAkC,EAAEH,QAAQ,EACpDI,IAAI,CAACC,QAAO,IAAK;UAChB,IAAIA,QAAQ,CAACxB,IAAI,CAACyB,OAAO,EAAE;YACzB,IAAI,CAACnB,aAAY,GAAIkB,QAAQ,CAACxB,IAAI,CAAC0B,QAAQ;UAC7C,OAAO;YACLC,KAAK,CAAC,WAAW,CAAC;UACpB;QACF,CAAC,CAAC,CAACC,KAAK,CAACC,KAAI,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QACjD,CAAC,CAAC;MACJ;IACF,CAAC;IACDE,aAAaA,CAAA,EAAG;MACd,IAAGtB,OAAO,CAAC,WAAW,CAAC,EAAC;QACtBX,KAAK,CAACwB,IAAI,CAAC,qCAAqC,EAAE;UAChDU,QAAQ,EAAE,IAAI,CAAC1B,aAAa;UAC5BL,OAAM,EAAI,IAAI,CAACA,OAAO;UACtBG,SAAQ,EAAI,IAAI,CAACA;QACnB,CAAC,CAAC,CAACmB,IAAI,CAACC,QAAO,IAAK;UAClB,IAAIA,QAAQ,CAACxB,IAAI,CAACiC,MAAK,IAAK,SAAS,EAAE;YACrC/B,cAAc,CAACgC,OAAO,CAAC,UAAU,EAAC,IAAI,CAAC5B,aAAa,CAAC;YACrD,IAAI,CAACD,QAAO,GAAI,IAAI,CAACC,aAAa;YAClC,IAAI,CAACA,aAAY,GAAI,EAAE;UACzB,OAAO;YACLwB,OAAO,CAACK,GAAG,CAACX,QAAQ,CAACxB,IAAK,CAAC;YAC3B2B,KAAK,CAAC,WAAW,CAAC;UACpB;QACF,CAAC,CAAC,CAACC,KAAK,CAACC,KAAI,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C,CAAC,CAAC;MACJ;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}