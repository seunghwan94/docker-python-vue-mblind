{"ast":null,"code":"export default {\n  data() {\n    return {\n      modalPhoto: false\n    };\n  },\n  props: {\n    userprofile: Object\n  },\n  methods: {\n    openModal() {\n      this.modalPhoto = true;\n    },\n    closeModal() {\n      this.modalPhoto = false;\n    },\n    handleMouseMove(e) {\n      const container = this.$refs.container;\n      const overlay = this.$refs.overlay;\n      const rect = container.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      const rotateY = -1 / 5 * x + 20;\n      const rotateX = 4 / 30 * y - 20;\n      container.style.transform = `perspective(350px) rotateY(${rotateY}deg) rotateX(${rotateX}deg)`;\n      overlay.style.backgroundPosition = `${x / 5 + y / 5}%`;\n      overlay.style.opacity = x / 200;\n      overlay.style.filter = `brightness(1.2)`;\n    },\n    handleMouseOut() {\n      const container = this.$refs.container;\n      const overlay = this.$refs.overlay;\n      overlay.style.opacity = '0';\n      container.style.transform = 'perspective(350px) rotateY(0deg) rotateX(0deg)';\n    },\n    modalhandleMouseMove(e) {\n      const container = this.$refs.container;\n      const overlay = this.$refs.overlay;\n\n      // 컨테이너의 크기를 동적으로 가져오기\n      const rect = container.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n\n      // 컨테이너의 너비와 높이를 기반으로 회전 각도 계산\n      const rotateY = (x / rect.width - 0.5) * 30; // -15도 ~ 15도 범위로 회전\n      const rotateX = (y / rect.height - 0.5) * -30; // -15도 ~ 15도 범위로 회전\n\n      // 오버레이 배경 위치 및 효과 동적 적용\n      overlay.style.backgroundPosition = `${x / rect.width * 100}% ${y / rect.height * 100}%`;\n      overlay.style.opacity = x / rect.width * 0.5 + 0.1; // 투명도 조정\n      overlay.style.filter = `brightness(${1 + x / rect.width * 0.5})`; // 밝기 조정\n    },\n    modalhandleMouseOut() {\n      const container = this.$refs.container;\n      const overlay = this.$refs.overlay;\n      overlay.style.opacity = '0';\n      container.style.transform = 'perspective(350px) rotateY(0deg) rotateX(0deg)';\n    },\n    shortViewData(text) {\n      if (text.length > 10) {\n        text = text.substring(0, 10) + \"...\";\n      }\n      return text;\n    }\n  }\n};","map":{"version":3,"names":["data","modalPhoto","props","userprofile","Object","methods","openModal","closeModal","handleMouseMove","e","container","$refs","overlay","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","rotateY","rotateX","style","transform","backgroundPosition","opacity","filter","handleMouseOut","modalhandleMouseMove","width","height","modalhandleMouseOut","shortViewData","text","length","substring"],"sources":["/var/www/front/src/components/Photo/PhotoProfile.vue"],"sourcesContent":["<template>\n    <div class=\"containercard card border-primary m-3\" @mousemove=\"handleMouseMove\" @mouseout=\"handleMouseOut\" ref=\"container\" @click=\"openModal\">\n      <div class=\"card-header\">{{ userprofile.name }}</div>\n      <div class=\"overlay\" ref=\"overlay\"></div>\n      <!-- <div class=\"cardtest\"></div> -->\n      <img class=\"cardimg\" :src=\"require(`../../assets/img/${userprofile.img}`)\">\n      <div class=\"card-body pt-2\">\n        <p class=\"card-text pt-1 m-0\">생일 : {{ userprofile.birth }}</p>\n        <p class=\"card-text pt-1 m-0\">성별 : {{ userprofile.gender }}</p>\n        <p class=\"card-text pt-1 m-0\">주소 : {{ shortViewData(userprofile.addr) }}</p>\n        <p class=\"card-text pt-1 m-0\">자기소개 : {{ shortViewData(userprofile.intro) }}</p>\n      </div>\n    </div>\n\n    <!-- Modal -->\n    <div v-if=\"modalPhoto\" class=\"modal\" style=\"display: block;\" tabindex=\"-1\" role=\"dialog\">\n      <div class=\"modalcontainercard\">\n          <div class=\"containercard card border-primary m-3\" style=\"width: 360px;\" @mousemove=\"modalhandleMouseMove\" @mouseout=\"modalhandleMouseOut\" ref=\"container\" @click=\"closeModal\">\n            <div class=\"card-header\">{{ userprofile.name }}</div>\n            <div class=\"overlay\" ref=\"overlay\"></div>\n            <!-- <div class=\"cardtest\"></div> -->\n            <img class=\"cardimg\" :src=\"require(`../../assets/img/${userprofile.img}`)\" style=\"height: auto;\">\n            <div class=\"card-body pt-2\">\n              <p class=\"card-text pt-1 m-0\">생일 : {{ userprofile.birth }}</p>\n              <p class=\"card-text pt-1 m-0\">성별 : {{ userprofile.gender }}</p>\n              <p class=\"card-text pt-1 m-0\">주소 : {{ userprofile.addr }}</p>\n              <br/>\n              <p class=\"card-text pt-2 pb-2 m-0\">자기소개 <br/><br/> {{ userprofile.intro }}</p>\n              \n            </div>\n          </div>\n      </div>\n\n    </div>\n\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return{\n        modalPhoto: false,\n      }\n    },\n    props:{\n      userprofile:Object,\n    },\n    methods: {\n      openModal(){\n        this.modalPhoto = true;\n      },\n      closeModal(){\n        this.modalPhoto = false;\n      },\n      handleMouseMove(e) {\n        const container = this.$refs.container;\n        const overlay = this.$refs.overlay;\n        \n        const rect = container.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        const y = e.clientY - rect.top;\n  \n        const rotateY = -1/5 * x + 20;\n        const rotateX = 4/30 * y - 20;\n  \n        container.style.transform = `perspective(350px) rotateY(${rotateY}deg) rotateX(${rotateX}deg)`;\n        overlay.style.backgroundPosition = `${x/5 + y/5}%`;\n        overlay.style.opacity = x/200;\n        overlay.style.filter = `brightness(1.2)`;\n      },\n      handleMouseOut() {\n        const container = this.$refs.container;\n        const overlay = this.$refs.overlay;\n  \n        overlay.style.opacity = '0';\n        container.style.transform = 'perspective(350px) rotateY(0deg) rotateX(0deg)';\n      },\n      modalhandleMouseMove(e) {\n        const container = this.$refs.container;\n        const overlay = this.$refs.overlay;\n        \n        // 컨테이너의 크기를 동적으로 가져오기\n        const rect = container.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        const y = e.clientY - rect.top;\n  \n        // 컨테이너의 너비와 높이를 기반으로 회전 각도 계산\n        const rotateY = ((x / rect.width) - 0.5) * 30; // -15도 ~ 15도 범위로 회전\n        const rotateX = ((y / rect.height) - 0.5) * -30; // -15도 ~ 15도 범위로 회전\n\n  \n  // 오버레이 배경 위치 및 효과 동적 적용\n  overlay.style.backgroundPosition = `${(x / rect.width) * 100}% ${(y / rect.height) * 100}%`;\n  overlay.style.opacity = (x / rect.width) * 0.5 + 0.1; // 투명도 조정\n  overlay.style.filter = `brightness(${1 + (x / rect.width) * 0.5})`; // 밝기 조정\n      },\n      modalhandleMouseOut() {\n        const container = this.$refs.container;\n        const overlay = this.$refs.overlay;\n  \n        overlay.style.opacity = '0';\n        container.style.transform = 'perspective(350px) rotateY(0deg) rotateX(0deg)';\n      },\n      shortViewData(text){\n        if (text.length > 10) {\n          text = text.substring(0, 10) + \"...\";\n        }\n        return text;\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .containercard {\n    width: 220px;\n    transition: all 0.1s;\n    position: relative;\n    transform-style: preserve-3d;\n  }\n  .cardimg {\n    width: 100%;\n    height: 200px;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n  }\n  .overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(105deg,\n        transparent 35%,\n        rgba(255, 219, 112, 0.1) 40%,\n        rgba(255, 219, 112, 0.5) 45%,\n        rgba(132, 50, 255, 0.5) 50%,\n        rgba(132, 50, 255, 0.1) 55%,\n        transparent 60%\n    );\n    mix-blend-mode: color-dodge;\n    background-size: 200% 200%;\n    background-position: 100%;\n    box-shadow: 0 0 10px rgba(0,0,0,0.1);\n    pointer-events: none;\n    opacity: 0;\n    filter: blur(0.5px);\n    transition: opacity 0.3s;\n  }\n  .modalcontainercard {\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      z-index: 1050; /* 모달이 다른 요소 위에 표시되도록 z-index를 설정 */\n      width: auto;\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}