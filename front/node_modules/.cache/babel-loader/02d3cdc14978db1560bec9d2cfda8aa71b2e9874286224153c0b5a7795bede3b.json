{"ast":null,"code":"export default {\n  name: 'BoardList',\n  props: {\n    posts: {\n      type: Array,\n      default: () => []\n    }\n  },\n  methods: {\n    postSelect(postId) {\n      // Handle post selection\n      console.log('Post selected:', postId);\n    },\n    stripHtml(html) {\n      let doc = new DOMParser().parseFromString(html, 'text/html');\n      let text = doc.body.textContent || \"\";\n      if (text.length > 20) {\n        text = text.substring(0, 20) + \"...\";\n      }\n      return text;\n    },\n    formatDate(dateString) {\n      let date = new Date(dateString);\n      let year = date.getFullYear();\n      let month = ('0' + (date.getMonth() + 1)).slice(-2);\n      let day = ('0' + date.getDate()).slice(-2);\n      let hours = ('0' + date.getHours()).slice(-2);\n      let minutes = ('0' + date.getMinutes()).slice(-2);\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\n    }\n  }\n};","map":{"version":3,"names":["name","props","posts","type","Array","default","methods","postSelect","postId","console","log","stripHtml","html","doc","DOMParser","parseFromString","text","body","textContent","length","substring","formatDate","dateString","date","Date","year","getFullYear","month","getMonth","slice","day","getDate","hours","getHours","minutes","getMinutes"],"sources":["/var/www/front/src/components/Board/BoardList.vue"],"sourcesContent":["<template>\n    <div>\n      <div v-if=\"posts.length>0\" class=\"d-flex flex-column\">\n        <div \n          class=\"card border-primary m-3\"\n          v-for=\"post in posts\"\n          :key=\"post.board_id\"\n          @click=\"postSelect(post.board_id)\"\n        >\n          <div class=\"card-header d-flex justify-content-between\">\n            {{ post.category_name }}\n            <p class=\"card-text\">{{ post.user_username }}</p>\n          </div>\n          <div class=\"card-body\">\n            <h4 class=\"card-title\">{{ post.title }}</h4>\n            <div>{{ stripHtml(post.content) }}</div>\n            <div class=\"d-flex mt-2 justify-content-between\">\n              <p class=\"text-body-tertiary pe-2 m-0\">{{ formatDate(post.create_date) }}</p>\n              <div class=\"d-flex justify-content-end\">\n                <p class=\"text-body-tertiary pe-2 m-0\"><i class=\"bi bi-eye\"></i> {{ post.view_count }}</p>\n                <p class=\"text-body-tertiary pe-2 m-0\"><i class=\"bi bi-chat-dots\"></i> {{ post.comment_count }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-else>\n        <div class=\"card border-primary m-3\">\n          <div class=\"card-body p-0\">\n            <div class=\"card-header d-flex justify-content-between\" style=\"height: 32px;\"></div>\n            <h5 class=\"card-title p-4\" style=\"text-align:center;\">게시글이 없습니다.</h5>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'BoardList',\n    props: {\n      posts: {\n        type: Array,\n        default: () => []\n      },\n    },\n    methods: {\n      postSelect(postId) {\n        // Handle post selection\n        console.log('Post selected:', postId);\n      },\n      stripHtml(html) {\n        let doc = new DOMParser().parseFromString(html, 'text/html');\n        let text = doc.body.textContent || \"\";\n        if (text.length > 20) {\n          text = text.substring(0, 20) + \"...\";\n        }\n        return text;\n      },\n      formatDate(dateString) {\n        let date = new Date(dateString);\n        let year = date.getFullYear();\n        let month = ('0' + (date.getMonth() + 1)).slice(-2);\n        let day = ('0' + date.getDate()).slice(-2);\n        let hours = ('0' + date.getHours()).slice(-2);\n        let minutes = ('0' + date.getMinutes()).slice(-2);\n        return `${year}-${month}-${day} ${hours}:${minutes}`;\n      },\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .card {\n    cursor: pointer;\n  }\n  </style>\n  "],"mappings":"AAsCE,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,MAAM,EAAE;MACjB;MACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,MAAM,CAAC;IACvC,CAAC;IACDG,SAASA,CAACC,IAAI,EAAE;MACd,IAAIC,GAAE,GAAI,IAAIC,SAAS,CAAC,CAAC,CAACC,eAAe,CAACH,IAAI,EAAE,WAAW,CAAC;MAC5D,IAAII,IAAG,GAAIH,GAAG,CAACI,IAAI,CAACC,WAAU,IAAK,EAAE;MACrC,IAAIF,IAAI,CAACG,MAAK,GAAI,EAAE,EAAE;QACpBH,IAAG,GAAIA,IAAI,CAACI,SAAS,CAAC,CAAC,EAAE,EAAE,IAAI,KAAK;MACtC;MACA,OAAOJ,IAAI;IACb,CAAC;IACDK,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAIC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MAC/B,IAAIG,IAAG,GAAIF,IAAI,CAACG,WAAW,CAAC,CAAC;MAC7B,IAAIC,KAAI,GAAI,CAAC,GAAE,IAAKJ,IAAI,CAACK,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;MACnD,IAAIC,GAAE,GAAI,CAAC,GAAE,GAAIP,IAAI,CAACQ,OAAO,CAAC,CAAC,EAAEF,KAAK,CAAC,CAAC,CAAC,CAAC;MAC1C,IAAIG,KAAI,GAAI,CAAC,GAAE,GAAIT,IAAI,CAACU,QAAQ,CAAC,CAAC,EAAEJ,KAAK,CAAC,CAAC,CAAC,CAAC;MAC7C,IAAIK,OAAM,GAAI,CAAC,GAAE,GAAIX,IAAI,CAACY,UAAU,CAAC,CAAC,EAAEN,KAAK,CAAC,CAAC,CAAC,CAAC;MACjD,OAAO,GAAGJ,IAAI,IAAIE,KAAK,IAAIG,GAAG,IAAIE,KAAK,IAAIE,OAAO,EAAE;IACtD;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}