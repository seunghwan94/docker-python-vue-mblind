{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    board_id: String,\n    user_name: String\n  },\n  data() {\n    return {\n      comments: [],\n      isEditingPost: false,\n      editContent: ''\n    };\n  },\n  mounted() {\n    this.commentList();\n  },\n  methods: {\n    sendformatDate(create_date) {\n      this.$emit('formatDate', create_date);\n    },\n    cancelEdit(index) {\n      this.comments[index].isEditing = false;\n    },\n    toggleEdit(index) {\n      this.comments[index].isEditing = !this.comments[index].isEditing;\n      if (this.comments[index].isEditing) {\n        this.comments[index].editContent = this.comments[index].content;\n      }\n    },\n    async commentList() {\n      try {\n        const response = await axios.get(`${this.$BackURL}/commentList`, {\n          params: {\n            board_id: this.board_id\n          }\n        });\n        if (response.data.status === 'success') {\n          this.comments = response.data.res.map(comment => ({\n            ...comment,\n            isEditing: false,\n            editContent: ''\n          }));\n        } else {\n          console.error('Failed to fetch comments:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","board_id","String","user_name","data","comments","isEditingPost","editContent","mounted","commentList","methods","sendformatDate","create_date","$emit","cancelEdit","index","isEditing","toggleEdit","content","response","get","$BackURL","params","status","res","map","comment","console","error","message"],"sources":["/var/www/front/src/components/Board/BoardComment.vue"],"sourcesContent":["<template>\n    <div class=\"card bg-light m-2\" style=\"max-width: 100%;\">\n        <div class=\"card-header\">댓글</div>\n        <div v-if=\"comments.length > 0\" class=\"d-flex p-3 pb-0 \" style=\"flex-direction: column;\">\n            <div v-for=\"(commentdata, index) in comments\" :key=\"index\" class=\"card border-light mb-3\" style=\"max-width: 100%;\">\n                <div class=\"card-body align-items-center d-flex\" style=\"flex-direction: row;\">\n                    <!-- 이미지 -->\n                    <img :src=\"require(`../../assets/img/${commentdata.img}`)\" style=\"width: 50px;border-radius: 50%;\">\n                    <!-- 댓글 -->\n                    <div class=\"w-100 ps-4\">\n                        <!-- 이름, 편집, 삭제 -->\n                        <div class=\"d-flex\" style=\"align-items: center;justify-content: space-between;\">\n                            <p style=\"font-weight: bold; margin:0;\">{{ commentdata.name }}</p>\n                            <div class=\"d-flex\" v-if=\"commentdata.name === user_name\">\n                                <div type=\"button\" class=\"m-0\" style=\"font-size: 16px;\" @click=\"toggleEdit(index)\"><i class=\"bi bi-pencil-square\"></i></div>\n                                <div type=\"button\" class=\"m-0 ms-1\" style=\"font-size: 16px;\" @click=\"commentDelete(index, commentdata.id)\"><i class=\"bi bi-trash\"></i></div>\n                            </div>\n                        </div>\n                        <!-- 댓글 편집 -->\n                        <div v-if=\"commentdata.isEditing\">\n                            <textarea v-model=\"commentdata.editContent\" class=\"form-control\" rows=\"2\"></textarea>\n                            <div class=\"d-flex mt-2 mb-2\" style=\"justify-content: flex-end;\">\n                                <button class=\"btn btn-primary btn-sm \" @click=\"saveEdit(index, commentdata.id)\">수정</button>\n                                <button class=\"btn btn-secondary btn-sm  ms-2\" @click=\"cancelEdit(index)\">취소</button>\n                            </div>\n                        </div>\n                        <!-- 댓글 view -->\n                        <p v-else class=\"card-text m-0\">{{ commentdata.content }}</p>\n                        <p class=\"text-body-tertiary m-0\" style=\"text-align: end; font-size: 13px;\">{{ sendformatDate(commentdata.create_date) }}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n    props:{\n        board_id: String,\n        user_name: String,\n    },\n    data(){\n        return{\n            comments:[],\n            isEditingPost: false,\n            editContent: '',\n        }\n    },\n    mounted() {\n        this.commentList();\n    },\n    methods: {\n        sendformatDate(create_date){\n            this.$emit('formatDate', create_date);\n        },\n        cancelEdit(index) {\n            this.comments[index].isEditing = false;\n        },\n        toggleEdit(index) {\n            this.comments[index].isEditing = !this.comments[index].isEditing;\n            if (this.comments[index].isEditing) {\n                this.comments[index].editContent = this.comments[index].content;\n            }\n        },\n        async commentList() {\n            try {\n                const response = await axios.get(`${this.$BackURL}/commentList`, {\n                    params: {\n                        board_id: this.board_id\n                    }\n                });\n                if (response.data.status === 'success') {\n                    this.comments = response.data.res.map(comment => ({\n                        ...comment,\n                        isEditing: false,\n                        editContent: ''\n                    }));\n                } else {\n                    console.error('Failed to fetch comments:', response.data.message);\n                }\n            } catch (error) {\n                console.error('Error fetching comments:', error);\n            }\n        },\n    }\n}\n</script>\n<style>\n\n</style>"],"mappings":"AAqCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,KAAK,EAAC;IACFC,QAAQ,EAAEC,MAAM;IAChBC,SAAS,EAAED;EACf,CAAC;EACDE,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,QAAQ,EAAC,EAAE;MACXC,aAAa,EAAE,KAAK;MACpBC,WAAW,EAAE;IACjB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,WAAW,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACLC,cAAcA,CAACC,WAAW,EAAC;MACvB,IAAI,CAACC,KAAK,CAAC,YAAY,EAAED,WAAW,CAAC;IACzC,CAAC;IACDE,UAAUA,CAACC,KAAK,EAAE;MACd,IAAI,CAACV,QAAQ,CAACU,KAAK,CAAC,CAACC,SAAQ,GAAI,KAAK;IAC1C,CAAC;IACDC,UAAUA,CAACF,KAAK,EAAE;MACd,IAAI,CAACV,QAAQ,CAACU,KAAK,CAAC,CAACC,SAAQ,GAAI,CAAC,IAAI,CAACX,QAAQ,CAACU,KAAK,CAAC,CAACC,SAAS;MAChE,IAAI,IAAI,CAACX,QAAQ,CAACU,KAAK,CAAC,CAACC,SAAS,EAAE;QAChC,IAAI,CAACX,QAAQ,CAACU,KAAK,CAAC,CAACR,WAAU,GAAI,IAAI,CAACF,QAAQ,CAACU,KAAK,CAAC,CAACG,OAAO;MACnE;IACJ,CAAC;IACD,MAAMT,WAAWA,CAAA,EAAG;MAChB,IAAI;QACA,MAAMU,QAAO,GAAI,MAAMpB,KAAK,CAACqB,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,cAAc,EAAE;UAC7DC,MAAM,EAAE;YACJrB,QAAQ,EAAE,IAAI,CAACA;UACnB;QACJ,CAAC,CAAC;QACF,IAAIkB,QAAQ,CAACf,IAAI,CAACmB,MAAK,KAAM,SAAS,EAAE;UACpC,IAAI,CAAClB,QAAO,GAAIc,QAAQ,CAACf,IAAI,CAACoB,GAAG,CAACC,GAAG,CAACC,OAAM,KAAM;YAC9C,GAAGA,OAAO;YACVV,SAAS,EAAE,KAAK;YAChBT,WAAW,EAAE;UACjB,CAAC,CAAC,CAAC;QACP,OAAO;UACHoB,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAET,QAAQ,CAACf,IAAI,CAACyB,OAAO,CAAC;QACrE;MACJ,EAAE,OAAOD,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}