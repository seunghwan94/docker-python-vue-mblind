{"ast":null,"code":"import axios from 'axios';\nimport PhotoProfile from './PhotoProfile.vue';\nexport default {\n  data() {\n    return {\n      user_list: [],\n      // 페이징\n      totalPosts: 0,\n      currentPage: 1,\n      perPage: 10\n    };\n  },\n  components: {\n    PhotoProfile\n  },\n  mounted() {\n    this.userList();\n  },\n  methods: {\n    userList(page = this.currentPage) {\n      axios.get(`${this.$BackURL}/userList`, {\n        params: {\n          page: page,\n          per_page: this.perPage\n        }\n      }).then(response => {\n        console.log(response.data);\n        if (response.data.status == 'success') {\n          this.user_list = response.data.res;\n        } else {\n          console.log('오류발생 새로고침해주세요.');\n        }\n      }).catch(error => {\n        alert('Theme오류 새로고침해주세요.');\n        console.error('Error uploading file:', error);\n      });\n    },\n    userListTotal() {\n      axios.get(`${this.$BackURL}/userListPage`, {}).then(response => {\n        console.log(response.data);\n        if (response.data.status == 'success') {\n          this.user_list = response.data.res;\n        } else {\n          console.log('오류발생 새로고침해주세요.');\n        }\n      }).catch(error => {\n        alert('Theme오류 새로고침해주세요.');\n        console.error('Error uploading file:', error);\n      });\n    }\n    // async fetchPhoto(page = this.currentPage) {\n\n    //     // total posts\n    //     const totalPostsResponse = await axios.get(`${this.$BackURL}/boardListPage`, {\n    //         params: {\n    //         category_id: this.selectedCategory\n    //         }\n    //     });\n    //     // response\n    //     if (totalPostsResponse.data.status === 'success') {\n    //         if (totalPostsResponse.data.res[0].total_posts == 0){\n    //         // 데이터가 없는경우\n    //         this.totalPosts = 1; \n    //         }else{\n    //         this.totalPosts = totalPostsResponse.data.res[0].total_posts;\n    //         }\n    //     } else {\n    //         console.error('Failed to fetch total posts:', totalPostsResponse.data.message);\n    //     }\n    //     } catch (error) {\n    //     console.error('Error fetching posts or total posts:', error);\n    //     }\n    // },\n  }\n};","map":{"version":3,"names":["axios","PhotoProfile","data","user_list","totalPosts","currentPage","perPage","components","mounted","userList","methods","page","get","$BackURL","params","per_page","then","response","console","log","status","res","catch","error","alert","userListTotal"],"sources":["/var/www/front/src/components/Photo/MainPhoto.vue"],"sourcesContent":["<template>\n    <div class=\"d-flex flex-wrap\">\n        <PhotoProfile v-for=\"(userprofile,index) in user_list\" :key=\"index\" :userprofile=\"userprofile\"/>\n    </div>\n</template>\n<script>\nimport axios  from 'axios';\nimport PhotoProfile from './PhotoProfile.vue';\n\nexport default {\n    data(){\n        return{\n            user_list: [],\n            // 페이징\n            totalPosts: 0,\n            currentPage: 1,\n            perPage: 10,\n        }\n    },\n    components:{\n        PhotoProfile,\n    },\n    mounted() {\n        this.userList();\n    },\n    methods: {\n        userList(page = this.currentPage){\n            axios.get(`${this.$BackURL}/userList`, {\n                params: {\n                    page: page,\n                    per_page: this.perPage\n                }\n            }).then(response => {\n                console.log(response.data);\n                if (response.data.status == 'success') {\n                    this.user_list = response.data.res;\n                } else {\n                    console.log('오류발생 새로고침해주세요.');\n                }\n            }).catch(error => {\n                alert('Theme오류 새로고침해주세요.');\n                console.error('Error uploading file:', error);\n            });\n        },\n        userListTotal(){\n            axios.get(`${this.$BackURL}/userListPage`, {\n\n            }).then(response => {\n                console.log(response.data);\n                if (response.data.status == 'success') {\n                    this.user_list = response.data.res;\n                } else {\n                    console.log('오류발생 새로고침해주세요.');\n                }\n            }).catch(error => {\n                alert('Theme오류 새로고침해주세요.');\n                console.error('Error uploading file:', error);\n            });\n        },\n        // async fetchPhoto(page = this.currentPage) {\n\n    \n        //     // total posts\n        //     const totalPostsResponse = await axios.get(`${this.$BackURL}/boardListPage`, {\n        //         params: {\n        //         category_id: this.selectedCategory\n        //         }\n        //     });\n        //     // response\n        //     if (totalPostsResponse.data.status === 'success') {\n        //         if (totalPostsResponse.data.res[0].total_posts == 0){\n        //         // 데이터가 없는경우\n        //         this.totalPosts = 1; \n        //         }else{\n        //         this.totalPosts = totalPostsResponse.data.res[0].total_posts;\n        //         }\n        //     } else {\n        //         console.error('Failed to fetch total posts:', totalPostsResponse.data.message);\n        //     }\n        //     } catch (error) {\n        //     console.error('Error fetching posts or total posts:', error);\n        //     }\n        // },\n    }\n}\n</script>\n<style>\n\n</style>"],"mappings":"AAMA,OAAOA,KAAI,MAAQ,OAAO;AAC1B,OAAOC,YAAW,MAAO,oBAAoB;AAE7C,eAAe;EACXC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,SAAS,EAAE,EAAE;MACb;MACAC,UAAU,EAAE,CAAC;MACbC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,UAAU,EAAC;IACPN;EACJ,CAAC;EACDO,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,QAAQ,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACLD,QAAQA,CAACE,IAAG,GAAI,IAAI,CAACN,WAAW,EAAC;MAC7BL,KAAK,CAACY,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,WAAW,EAAE;QACnCC,MAAM,EAAE;UACJH,IAAI,EAAEA,IAAI;UACVI,QAAQ,EAAE,IAAI,CAACT;QACnB;MACJ,CAAC,CAAC,CAACU,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACf,IAAI,CAAC;QAC1B,IAAIe,QAAQ,CAACf,IAAI,CAACkB,MAAK,IAAK,SAAS,EAAE;UACnC,IAAI,CAACjB,SAAQ,GAAIc,QAAQ,CAACf,IAAI,CAACmB,GAAG;QACtC,OAAO;UACHH,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QACjC;MACJ,CAAC,CAAC,CAACG,KAAK,CAACC,KAAI,IAAK;QACdC,KAAK,CAAC,mBAAmB,CAAC;QAC1BN,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN,CAAC;IACDE,aAAaA,CAAA,EAAE;MACXzB,KAAK,CAACY,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,eAAe,EAAE,CAE3C,CAAC,CAAC,CAACG,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACf,IAAI,CAAC;QAC1B,IAAIe,QAAQ,CAACf,IAAI,CAACkB,MAAK,IAAK,SAAS,EAAE;UACnC,IAAI,CAACjB,SAAQ,GAAIc,QAAQ,CAACf,IAAI,CAACmB,GAAG;QACtC,OAAO;UACHH,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QACjC;MACJ,CAAC,CAAC,CAACG,KAAK,CAACC,KAAI,IAAK;QACdC,KAAK,CAAC,mBAAmB,CAAC;QAC1BN,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN;IACA;;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}