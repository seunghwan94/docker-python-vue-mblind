{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ModalLogin',\n  data() {\n    return {\n      loginID: '',\n      loginPW: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    logout() {\n      if (confirm('logout을 진행하시겠습니까?')) {\n        sessionStorage.removeItem('user_id');\n        sessionStorage.removeItem('user_name');\n        this.user_id = null;\n        this.user_name = null;\n        window.location.reload();\n      }\n    },\n    SignUp() {\n      if (this.signUpName && this.signUpID && this.signUpPW && this.confirmPW) {\n        if (this.signUpPW === this.confirmPW) {\n          axios.post('http://127.0.0.1:3000/signup', {\n            signUpID: this.signUpID,\n            signUpPW: this.signUpPW,\n            signUpName: this.signUpName\n          }).then(res => {\n            console.log(res.data);\n            if (res.data.status === 'success') {\n              this.signUpName = '';\n              this.signUpID = '';\n              this.signUpPW = '';\n              this.confirmPW = '';\n              this.errorMessage = '';\n              alert('회원가입이 성공적으로 완료되었습니다.');\n\n              // 로그인 탭으로 전환\n              this.$nextTick(() => {\n                document.querySelector('a[href=\"#login\"]').click();\n              });\n            } else {\n              this.errorMessage = '존재하는 아이디입니다.';\n            }\n          }).catch(e => {\n            console.error('에러', e);\n            this.errorMessage = '서버에 연결할 수 없습니다.';\n          });\n        } else {\n          alert('비밀번호가 일치하지 않습니다.');\n        }\n      } else {\n        alert('모든 필드를 채워주세요.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","loginID","loginPW","errorMessage","methods","logout","confirm","sessionStorage","removeItem","user_id","user_name","window","location","reload","SignUp","signUpName","signUpID","signUpPW","confirmPW","post","then","res","console","log","status","alert","$nextTick","document","querySelector","click","catch","e","error"],"sources":["/var/www/front/src/components/Modal/ModalProfile.vue"],"sourcesContent":["<template>\n    <div class=\"modal-body\">\n        <!-- tab -->\n        <ul class=\"nav nav-tabs\" role=\"tablist\">\n          <li class=\"nav-item\" role=\"presentation\">\n              <a class=\"nav-link active\" data-bs-toggle=\"tab\" href=\"#profile\" aria-selected=\"false\" role=\"tab\" tabindex=\"-1\">Profile</a>\n          </li>\n          <!-- <li class=\"nav-item\" role=\"presentation\">\n              <a class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#signUp\" aria-selected=\"true\" role=\"tab\">Sign Up</a>\n          </li> -->\n        </ul>\n        <div id=\"myTabContent\" class=\"tab-content\">\n          <!-- 로그인 -->\n          <div class=\"tab-pane fade active show\" id=\"profile\" role=\"tabpanel\">\n              <div class=\"card border-success m-3\">\n              <img :src=\"require(`../assets/img/user.png`)\" style=\"width: 50px;border-radius: 50%;\">\n              <div class=\"card-body\">\n                  <div class=\"form-floating mb-3\">\n                  <input type=\"email\" class=\"form-control\" id=\"LoginID\" v-model=\"loginID\" placeholder=\"LoginID\">\n                  <label for=\"LoginID\">아이디를 입력하세요.</label>\n                  </div>\n                  <div class=\"form-floating\">\n                  <input type=\"password\" class=\"form-control\" id=\"LoginPW\" v-model=\"loginPW\" placeholder=\"LoginPW\" autocomplete=\"off\">\n                  <label for=\"LoginPW\">비밀번호를 입력하세요.</label>\n                  </div>\n                  <!-- 오류 메시지 -->\n                  <div v-if=\"errorMessage\" class=\"alert alert-danger m-3\">\n                  <strong>{{ errorMessage }}</strong>\n                  </div>\n                  <div class=\"d-flex m-3\" style=\"justify-content: center;\">\n                  <button type=\"button\" class=\"btn btn-success\" @click=\"Login\">Login</button>\n                  </div>\n\n              </div>\n              </div>\n          </div>\n        </div>\n    </div>\n  </template>\n  <script>\n  import axios  from 'axios';\n\n  export default {\n    name: 'ModalLogin',\n    data() {\n      return {\n        loginID: '',\n        loginPW: '',\n        errorMessage: ''\n      };\n    },\n    methods: {\n        logout() {\n          if (confirm('logout을 진행하시겠습니까?')) {\n            sessionStorage.removeItem('user_id');\n            sessionStorage.removeItem('user_name');\n            \n            this.user_id = null;\n            this.user_name = null;\n            \n            window.location.reload();\n          }\n        },\n      SignUp() {\n        if (this.signUpName && this.signUpID && this.signUpPW && this.confirmPW) {\n          if (this.signUpPW === this.confirmPW) {\n            axios.post('http://127.0.0.1:3000/signup', {\n              signUpID: this.signUpID,\n              signUpPW: this.signUpPW,\n              signUpName: this.signUpName\n            }).then(res => {\n              console.log(res.data);\n              if (res.data.status === 'success') {\n                this.signUpName = '';\n                this.signUpID = '';\n                this.signUpPW = '';\n                this.confirmPW = '';\n                this.errorMessage = '';\n\n                alert('회원가입이 성공적으로 완료되었습니다.');\n\n                // 로그인 탭으로 전환\n                this.$nextTick(() => {\n                  document.querySelector('a[href=\"#login\"]').click();\n                });\n              } else {\n                this.errorMessage = '존재하는 아이디입니다.';\n              }\n            }).catch(e => {\n              console.error('에러', e); \n              this.errorMessage = '서버에 연결할 수 없습니다.';\n            });\n          } else {\n            alert('비밀번호가 일치하지 않습니다.');\n          }\n        } else {\n          alert('모든 필드를 채워주세요.');\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style>\n\n  </style>"],"mappings":"AAwCE,OAAOA,KAAI,MAAQ,OAAO;AAE1B,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACLC,MAAMA,CAAA,EAAG;MACP,IAAIC,OAAO,CAAC,mBAAmB,CAAC,EAAE;QAChCC,cAAc,CAACC,UAAU,CAAC,SAAS,CAAC;QACpCD,cAAc,CAACC,UAAU,CAAC,WAAW,CAAC;QAEtC,IAAI,CAACC,OAAM,GAAI,IAAI;QACnB,IAAI,CAACC,SAAQ,GAAI,IAAI;QAErBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B;IACF,CAAC;IACHC,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACC,UAAS,IAAK,IAAI,CAACC,QAAO,IAAK,IAAI,CAACC,QAAO,IAAK,IAAI,CAACC,SAAS,EAAE;QACvE,IAAI,IAAI,CAACD,QAAO,KAAM,IAAI,CAACC,SAAS,EAAE;UACpCpB,KAAK,CAACqB,IAAI,CAAC,8BAA8B,EAAE;YACzCH,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBF,UAAU,EAAE,IAAI,CAACA;UACnB,CAAC,CAAC,CAACK,IAAI,CAACC,GAAE,IAAK;YACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACrB,IAAI,CAAC;YACrB,IAAIqB,GAAG,CAACrB,IAAI,CAACwB,MAAK,KAAM,SAAS,EAAE;cACjC,IAAI,CAACT,UAAS,GAAI,EAAE;cACpB,IAAI,CAACC,QAAO,GAAI,EAAE;cAClB,IAAI,CAACC,QAAO,GAAI,EAAE;cAClB,IAAI,CAACC,SAAQ,GAAI,EAAE;cACnB,IAAI,CAACf,YAAW,GAAI,EAAE;cAEtBsB,KAAK,CAAC,sBAAsB,CAAC;;cAE7B;cACA,IAAI,CAACC,SAAS,CAAC,MAAM;gBACnBC,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC,CAACC,KAAK,CAAC,CAAC;cACpD,CAAC,CAAC;YACJ,OAAO;cACL,IAAI,CAAC1B,YAAW,GAAI,cAAc;YACpC;UACF,CAAC,CAAC,CAAC2B,KAAK,CAACC,CAAA,IAAK;YACZT,OAAO,CAACU,KAAK,CAAC,IAAI,EAAED,CAAC,CAAC;YACtB,IAAI,CAAC5B,YAAW,GAAI,iBAAiB;UACvC,CAAC,CAAC;QACJ,OAAO;UACLsB,KAAK,CAAC,kBAAkB,CAAC;QAC3B;MACF,OAAO;QACLA,KAAK,CAAC,eAAe,CAAC;MACxB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}