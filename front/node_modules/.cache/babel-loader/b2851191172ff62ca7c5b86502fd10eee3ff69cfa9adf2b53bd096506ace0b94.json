{"ast":null,"code":"import axios from 'axios';\nimport BoardComment from './BoardComment.vue';\nexport default {\n  data() {\n    return {\n      commentCount: this.selectBoard.comment_count,\n      dropdownVisible: false\n    };\n  },\n  components: {\n    BoardComment\n  },\n  props: {\n    selectBoard: Object\n  },\n  methods: {\n    toggleDropdown() {\n      this.dropdownVisible = !this.dropdownVisible;\n    },\n    editBoard(board_id) {\n      this.dropdownVisible = false;\n      this.$emit('SelectPost', board_id, true);\n    },\n    // 게시글 삭제\n    async deleteBoard(board_id) {\n      try {\n        const response = await axios.get(`${this.$BackURL}/deleteBoard`, {\n          params: {\n            board_id: board_id\n          }\n        });\n        if (response.data.status === 'success') {\n          window.location.href(`${this.$FrontURL}/Board`);\n        } else {\n          console.error('Failed to fetch comments:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    },\n    formatDate(dateString) {\n      let date = new Date(dateString);\n      let year = date.getFullYear();\n      let month = ('0' + (date.getMonth() + 1)).slice(-2);\n      let day = ('0' + date.getDate()).slice(-2);\n      let hours = ('0' + date.getHours()).slice(-2);\n      let minutes = ('0' + date.getMinutes()).slice(-2);\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\n    }\n  }\n};","map":{"version":3,"names":["axios","BoardComment","data","commentCount","selectBoard","comment_count","dropdownVisible","components","props","Object","methods","toggleDropdown","editBoard","board_id","$emit","deleteBoard","response","get","$BackURL","params","status","window","location","href","$FrontURL","console","error","message","formatDate","dateString","date","Date","year","getFullYear","month","getMonth","slice","day","getDate","hours","getHours","minutes","getMinutes"],"sources":["/var/www/front/src/components/Board/BoardView.vue"],"sourcesContent":["<template>\n    <div class=\"card border-success mb-3\" style=\"max-width: 100%\">\n        <!-- 게시글 헤더 -->\n        <div class=\"card-header d-flex\" style=\"justify-content: space-between;\">\n            {{ selectBoard.category_name }}\n            <p class=\"card-text\">{{ selectBoard.user_username }}</p>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between\">\n                <!-- 게시글 제목 -->\n                <h4 class=\"card-title mt-3 mb-3\">{{ selectBoard.title }}</h4>\n                <!-- 게시글 dropdown -->\n                <div class=\"dropdown\">\n                    <div type=\"button\" @click=\"toggleDropdown\" style=\"cursor: pointer;\">\n                        <i class=\"bi bi-three-dots-vertical\"></i>\n                    </div>\n                    <div class=\"dropdown-menu show\" v-if=\"dropdownVisible\" >\n                        <button class=\"dropdown-item\" @click=\"editBoard(selectBoard.board_id)\">수정</button>\n                        <button class=\"dropdown-item\" @click=\"deleteBoard(selectBoard.board_id)\">삭제</button>\n                    </div>\n                </div>\n            </div>\n            <!-- 게시글 내용 -->\n            <div v-html=\"selectBoard.content\"></div>\n            <!-- 게시글 footer -->\n            <div class=\"d-flex mt-5\" style=\"justify-content: space-between;\">\n                <p class=\"text-body-tertiary pe-2 m-0\">{{ formatDate(selectBoard.create_date) }}</p>\n                <div class=\"d-flex justify-content-end\">\n                    <p class=\"text-body-tertiary pe-2 m-0\"><i class=\"bi bi-eye\"></i> {{ selectBoard.view_count + 1 }}</p>\n                    <p class=\"text-body-tertiary pe-2 m-0\"><i class=\"bi bi-chat-dots\"></i> {{ commentCount }} </p>\n                </div>\n            </div>\n        </div>\n        <!-- 댓글 -->\n        <BoardComment :board_id=\"selectBoard.board_id\" @formatDate=\"formatDate\"/>\n    </div>\n</template>\n<script>\nimport axios from 'axios';\nimport BoardComment from './BoardComment.vue';\n\nexport default {\n    data() {\n        return {\n            commentCount: this.selectBoard.comment_count,\n            dropdownVisible: false,\n        };\n    },\n    components:{\n        BoardComment,\n    },\n    props: {\n        selectBoard:Object,\n    },\n    methods:{\n        toggleDropdown() {\n            this.dropdownVisible = !this.dropdownVisible;\n        },\n        editBoard(board_id) {\n            this.dropdownVisible = false;\n            this.$emit('SelectPost',board_id, true)\n        },\n        // 게시글 삭제\n        async deleteBoard(board_id) {\n            try {\n                const response = await axios.get(`${this.$BackURL}/deleteBoard`, {\n                    params: {\n                        board_id: board_id\n                    }\n                });\n                if (response.data.status === 'success') {\n                    window.location.href(`${this.$FrontURL}/Board`)\n                } else {\n                    console.error('Failed to fetch comments:', response.data.message);\n                }\n            } catch (error) {\n                console.error('Error fetching comments:', error);\n            }\n        },\n        formatDate(dateString) {\n            let date = new Date(dateString);\n            let year = date.getFullYear();\n            let month = ('0' + (date.getMonth() + 1)).slice(-2);\n            let day = ('0' + date.getDate()).slice(-2);\n            let hours = ('0' + date.getHours()).slice(-2);\n            let minutes = ('0' + date.getMinutes()).slice(-2);\n            return `${year}-${month}-${day} ${hours}:${minutes}`;\n        },\n        \n\n    }\n}\n</script>\n<style>\n\n</style>"],"mappings":"AAsCA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,YAAW,MAAO,oBAAoB;AAE7C,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE,IAAI,CAACC,WAAW,CAACC,aAAa;MAC5CC,eAAe,EAAE;IACrB,CAAC;EACL,CAAC;EACDC,UAAU,EAAC;IACPN;EACJ,CAAC;EACDO,KAAK,EAAE;IACHJ,WAAW,EAACK;EAChB,CAAC;EACDC,OAAO,EAAC;IACJC,cAAcA,CAAA,EAAG;MACb,IAAI,CAACL,eAAc,GAAI,CAAC,IAAI,CAACA,eAAe;IAChD,CAAC;IACDM,SAASA,CAACC,QAAQ,EAAE;MAChB,IAAI,CAACP,eAAc,GAAI,KAAK;MAC5B,IAAI,CAACQ,KAAK,CAAC,YAAY,EAACD,QAAQ,EAAE,IAAI;IAC1C,CAAC;IACD;IACA,MAAME,WAAWA,CAACF,QAAQ,EAAE;MACxB,IAAI;QACA,MAAMG,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,cAAc,EAAE;UAC7DC,MAAM,EAAE;YACJN,QAAQ,EAAEA;UACd;QACJ,CAAC,CAAC;QACF,IAAIG,QAAQ,CAACd,IAAI,CAACkB,MAAK,KAAM,SAAS,EAAE;UACpCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,GAAG,IAAI,CAACC,SAAS,QAAQ;QAClD,OAAO;UACHC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEV,QAAQ,CAACd,IAAI,CAACyB,OAAO,CAAC;QACrE;MACJ,EAAE,OAAOD,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IACDE,UAAUA,CAACC,UAAU,EAAE;MACnB,IAAIC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MAC/B,IAAIG,IAAG,GAAIF,IAAI,CAACG,WAAW,CAAC,CAAC;MAC7B,IAAIC,KAAI,GAAI,CAAC,GAAE,IAAKJ,IAAI,CAACK,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;MACnD,IAAIC,GAAE,GAAI,CAAC,GAAE,GAAIP,IAAI,CAACQ,OAAO,CAAC,CAAC,EAAEF,KAAK,CAAC,CAAC,CAAC,CAAC;MAC1C,IAAIG,KAAI,GAAI,CAAC,GAAE,GAAIT,IAAI,CAACU,QAAQ,CAAC,CAAC,EAAEJ,KAAK,CAAC,CAAC,CAAC,CAAC;MAC7C,IAAIK,OAAM,GAAI,CAAC,GAAE,GAAIX,IAAI,CAACY,UAAU,CAAC,CAAC,EAAEN,KAAK,CAAC,CAAC,CAAC,CAAC;MACjD,OAAO,GAAGJ,IAAI,IAAIE,KAAK,IAAIG,GAAG,IAAIE,KAAK,IAAIE,OAAO,EAAE;IACxD;EAGJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}