{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card border-success mb-3\",\n  style: {\n    \"max-width\": \"100%\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"card-header d-flex\",\n  style: {\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"card-text\"\n};\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"d-flex justify-content-between\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"card-title mt-3 mb-3\"\n};\nconst _hoisted_7 = {\n  class: \"dropdown\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-three-dots-vertical\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_9 = [_hoisted_8];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"dropdown-menu show\"\n};\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = {\n  key: 2,\n  class: \"d-flex justify-content-end mb-3\"\n};\nconst _hoisted_13 = {\n  class: \"d-flex mt-5\",\n  style: {\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_14 = {\n  class: \"text-body-tertiary pe-2 m-0\"\n};\nconst _hoisted_15 = {\n  class: \"d-flex justify-content-end\"\n};\nconst _hoisted_16 = {\n  class: \"text-body-tertiary pe-2 m-0\"\n};\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-eye\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_18 = {\n  class: \"text-body-tertiary pe-2 m-0\"\n};\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-chat-dots\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_20 = {\n  class: \"card bg-light m-2\",\n  style: {\n    \"max-width\": \"100%\"\n  }\n};\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header\"\n}, \"댓글\", -1 /* HOISTED */);\nconst _hoisted_22 = {\n  key: 0,\n  class: \"d-flex p-3 pb-0\",\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\"\n  }\n};\nconst _hoisted_23 = {\n  class: \"card-body align-items-center\",\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"row\"\n  }\n};\nconst _hoisted_24 = [\"src\"];\nconst _hoisted_25 = {\n  class: \"w-100 ps-4\"\n};\nconst _hoisted_26 = {\n  class: \"d-flex\",\n  style: {\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_27 = {\n  style: {\n    \"font-weight\": \"bold\",\n    \"margin\": \"0\"\n  }\n};\nconst _hoisted_28 = {\n  key: 0,\n  class: \"d-flex\"\n};\nconst _hoisted_29 = [\"onClick\"];\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-pencil-square\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_31 = [_hoisted_30];\nconst _hoisted_32 = [\"onClick\"];\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-trash\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_34 = [_hoisted_33];\nconst _hoisted_35 = {\n  key: 0\n};\nconst _hoisted_36 = [\"onUpdate:modelValue\"];\nconst _hoisted_37 = {\n  class: \"d-flex mt-2 mb-2\",\n  style: {\n    \"justify-content\": \"flex-end\"\n  }\n};\nconst _hoisted_38 = [\"onClick\"];\nconst _hoisted_39 = [\"onClick\"];\nconst _hoisted_40 = {\n  key: 1,\n  class: \"card-text m-0\"\n};\nconst _hoisted_41 = {\n  class: \"text-body-tertiary m-0\",\n  style: {\n    \"text-align\": \"end\",\n    \"font-size\": \"13px\"\n  }\n};\nconst _hoisted_42 = /*#__PURE__*/_createElementVNode(\"hr\", {\n  style: {\n    \"margin-bottom\": \"0\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_43 = {\n  class: \"card-body d-flex pb-0\"\n};\nconst _hoisted_44 = {\n  class: \"d-flex\",\n  style: {\n    \"align-items\": \"flex-start\"\n  }\n};\nconst _hoisted_45 = [\"src\"];\nconst _hoisted_46 = {\n  class: \"form-control ms-2\",\n  id: \"comment\",\n  style: {\n    \"height\": \"auto\",\n    \"min-height\": \"80px\"\n  }\n};\nconst _hoisted_47 = {\n  contenteditable: \"false\",\n  style: {\n    \"font-weight\": \"bold\"\n  }\n};\nconst _hoisted_48 = {\n  class: \"d-flex justify-content-end\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createTextVNode(_toDisplayString($props.selectPost.category_name) + \" \", 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_3, _toDisplayString($props.selectPost.user_username), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [!$data.isEditingPost ? (_openBlock(), _createElementBlock(\"h4\", _hoisted_6, _toDisplayString($props.selectPost.title), 1 /* TEXT */)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.editTitle = $event),\n    class: \"form-control mt-3 mb-3\"\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editTitle]]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", {\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleDropdown && $options.toggleDropdown(...args)),\n    style: {\n      \"cursor\": \"pointer\"\n    }\n  }, [..._hoisted_9]), $data.dropdownVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    class: \"dropdown-item\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.editPost($props.selectPost.post_id))\n  }, \"수정\"), _createElementVNode(\"button\", {\n    class: \"dropdown-item\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.deletePost && $options.deletePost(...args))\n  }, \"삭제\")])) : _createCommentVNode(\"v-if\", true)])]), !$data.isEditingPost ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _toDisplayString($options.stripHtml($props.selectPost.content)), 1 /* TEXT */)) : _withDirectives((_openBlock(), _createElementBlock(\"textarea\", {\n    key: 1,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.editContent = $event),\n    class: \"form-control mb-3\",\n    rows: \"5\"\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editContent]]), $data.isEditingPost ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary btn-sm\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.savePostEdit && $options.savePostEdit(...args))\n  }, \"저장\"), _createElementVNode(\"button\", {\n    class: \"btn btn-secondary btn-sm ms-2\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.cancelPostEdit && $options.cancelPostEdit(...args))\n  }, \"취소\")])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"p\", _hoisted_14, _toDisplayString($options.formatDate($props.selectPost.create_date)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"p\", _hoisted_16, [_hoisted_17, _createTextVNode(\" \" + _toDisplayString($props.selectPost.view_count), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_18, [_hoisted_19, _createTextVNode(\" \" + _toDisplayString($data.commentCount), 1 /* TEXT */)])])])]), _createElementVNode(\"div\", _hoisted_20, [_hoisted_21, $data.comments.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, (commentdata, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"card border-light mb-3\",\n      style: {\n        \"max-width\": \"100%\"\n      }\n    }, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"img\", {\n      src: require(`../assets/img/${commentdata.img}`),\n      style: {\n        \"width\": \"50px\",\n        \"border-radius\": \"50%\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_24), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"p\", _hoisted_27, _toDisplayString(commentdata.name), 1 /* TEXT */), commentdata.name === $data.user_name ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createElementVNode(\"div\", {\n      type: \"button\",\n      class: \"m-0\",\n      style: {\n        \"font-size\": \"16px\"\n      },\n      onClick: $event => $options.toggleEdit(index)\n    }, [..._hoisted_31], 8 /* PROPS */, _hoisted_29), _createElementVNode(\"div\", {\n      type: \"button\",\n      class: \"m-0 ms-1\",\n      style: {\n        \"font-size\": \"16px\"\n      },\n      onClick: $event => $options.commentDelete(index, commentdata.id)\n    }, [..._hoisted_34], 8 /* PROPS */, _hoisted_32)])) : _createCommentVNode(\"v-if\", true)]), commentdata.isEditing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_35, [_withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": $event => commentdata.editContent = $event,\n      class: \"form-control\",\n      rows: \"2\"\n    }, null, 8 /* PROPS */, _hoisted_36), [[_vModelText, commentdata.editContent]]), _createElementVNode(\"div\", _hoisted_37, [_createElementVNode(\"button\", {\n      class: \"btn btn-primary btn-sm\",\n      onClick: $event => $options.saveEdit(index, commentdata.id)\n    }, \"수정\", 8 /* PROPS */, _hoisted_38), _createElementVNode(\"button\", {\n      class: \"btn btn-secondary btn-sm ms-2\",\n      onClick: $event => $options.cancelEdit(index)\n    }, \"취소\", 8 /* PROPS */, _hoisted_39)])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_40, _toDisplayString(commentdata.content), 1 /* TEXT */)), _createElementVNode(\"p\", _hoisted_41, _toDisplayString($options.formatDate(commentdata.create_date)), 1 /* TEXT */)])])]);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_42])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_43, [_createElementVNode(\"div\", _hoisted_44, [_createElementVNode(\"img\", {\n    src: require(`../assets/img/${$data.user_img}`),\n    style: {\n      \"width\": \"50px\",\n      \"border-radius\": \"50%\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_45)]), _createElementVNode(\"div\", _hoisted_46, [_createElementVNode(\"div\", _hoisted_47, _toDisplayString($data.user_name), 1 /* TEXT */), _createElementVNode(\"div\", {\n    contenteditable: \"true\",\n    ref: \"editableContent\",\n    onInput: _cache[7] || (_cache[7] = (...args) => $options.updateComment && $options.updateComment(...args)),\n    style: {\n      \"outline\": \"none\",\n      \"border\": \"2px solid transparent\"\n    }\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)])]), _createElementVNode(\"div\", _hoisted_48, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-outline-primary m-3\",\n    onClick: _cache[8] || (_cache[8] = $event => $options.commentAdd($props.selectPost.post_id))\n  }, \"등록\")])])]);\n}","map":{"version":3,"names":["class","style","key","_createElementVNode","_hoisted_8","_hoisted_30","_hoisted_33","id","contenteditable","_createElementBlock","_hoisted_1","_hoisted_2","_createTextVNode","_toDisplayString","$props","selectPost","category_name","_hoisted_3","user_username","_hoisted_4","_hoisted_5","$data","isEditingPost","_hoisted_6","title","_cache","$event","editTitle","_hoisted_7","type","onClick","args","$options","toggleDropdown","_hoisted_9","dropdownVisible","_hoisted_10","editPost","post_id","deletePost","_createCommentVNode","_hoisted_11","stripHtml","content","editContent","rows","_hoisted_12","savePostEdit","cancelPostEdit","_hoisted_13","_hoisted_14","formatDate","create_date","_hoisted_15","_hoisted_16","_hoisted_17","view_count","_hoisted_18","_hoisted_19","commentCount","_hoisted_20","_hoisted_21","comments","length","_hoisted_22","_Fragment","_renderList","commentdata","index","_hoisted_23","src","require","img","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","name","user_name","_hoisted_28","toggleEdit","_hoisted_31","_hoisted_29","commentDelete","_hoisted_34","_hoisted_32","isEditing","_hoisted_35","_hoisted_36","_hoisted_37","saveEdit","_hoisted_38","cancelEdit","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","user_img","_hoisted_45","_hoisted_46","_hoisted_47","ref","onInput","updateComment","_hoisted_48","commentAdd"],"sources":["/var/www/front/src/components/Board/BoardView.vue"],"sourcesContent":["<template>\n    <div class=\"card border-success mb-3\" style=\"max-width: 100%\">\n        <div class=\"card-header d-flex\" style=\"justify-content: space-between;\">\n            {{ selectPost.category_name }}\n            <p class=\"card-text\">{{ selectPost.user_username }}</p>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between\">\n                <h4 class=\"card-title mt-3 mb-3\" v-if=\"!isEditingPost\">{{ selectPost.title }}</h4>\n                <input v-else v-model=\"editTitle\" class=\"form-control mt-3 mb-3\" />\n                <div class=\"dropdown\">\n                    <div type=\"button\" @click=\"toggleDropdown\" style=\"cursor: pointer;\">\n                        <i class=\"bi bi-three-dots-vertical\"></i>\n                    </div>\n                    <div v-if=\"dropdownVisible\" class=\"dropdown-menu show\">\n                        <button class=\"dropdown-item\" @click=\"editPost(selectPost.post_id)\">수정</button>\n                        <button class=\"dropdown-item\" @click=\"deletePost\">삭제</button>\n                    </div>\n                </div>\n            </div>\n            <div v-if=\"!isEditingPost\">{{ stripHtml(selectPost.content) }}</div>\n            <textarea v-else v-model=\"editContent\" class=\"form-control mb-3\" rows=\"5\"></textarea>\n            <div v-if=\"isEditingPost\" class=\"d-flex justify-content-end mb-3\">\n                <button class=\"btn btn-primary btn-sm\" @click=\"savePostEdit\">저장</button>\n                <button class=\"btn btn-secondary btn-sm ms-2\" @click=\"cancelPostEdit\">취소</button>\n            </div>\n            <div class=\"d-flex mt-5\" style=\"justify-content: space-between;\">\n                <p class=\"text-body-tertiary pe-2 m-0\">{{ formatDate(selectPost.create_date) }}</p>\n                <div class=\"d-flex justify-content-end\">\n                    <p class=\"text-body-tertiary pe-2 m-0\"><i class=\"bi bi-eye\"></i> {{ selectPost.view_count }}</p>\n                    <p class=\"text-body-tertiary pe-2 m-0\"><i class=\"bi bi-chat-dots\"></i> {{ commentCount }}</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"card bg-light m-2\" style=\"max-width: 100%;\">\n            <div class=\"card-header\">댓글</div>\n            <div v-if=\"comments.length > 0\" class=\"d-flex p-3 pb-0 \" style=\"display:flex; flex-direction: column;\">\n                <div v-for=\"(commentdata, index) in comments\" :key=\"index\" class=\"card border-light mb-3\" style=\"max-width: 100%;\">\n                    <div class=\"card-body align-items-center\" style=\"display:flex;flex-direction: row;\">\n                        <img :src=\"require(`../assets/img/${commentdata.img}`)\" style=\"width: 50px;border-radius: 50%;\">\n                        <div class=\"w-100 ps-4\">\n                            <div class=\"d-flex\" style=\"align-items: center;justify-content: space-between;\">\n                                <p style=\"font-weight: bold; margin:0;\">{{ commentdata.name }}</p>\n                                <div class=\"d-flex\" v-if=\"commentdata.name === user_name\">\n                                    <div type=\"button\" class=\"m-0\" style=\"font-size: 16px;\" @click=\"toggleEdit(index)\"><i class=\"bi bi-pencil-square\"></i></div>\n                                    <div type=\"button\" class=\"m-0 ms-1\" style=\"font-size: 16px;\" @click=\"commentDelete(index, commentdata.id)\"><i class=\"bi bi-trash\"></i></div>\n                                </div>\n                            </div>\n\n                            <div v-if=\"commentdata.isEditing\">\n                                <textarea v-model=\"commentdata.editContent\" class=\"form-control\" rows=\"2\"></textarea>\n                                <div class=\"d-flex mt-2 mb-2\" style=\"justify-content: flex-end;\">\n                                    <button class=\"btn btn-primary btn-sm \" @click=\"saveEdit(index, commentdata.id)\">수정</button>\n                                    <button class=\"btn btn-secondary btn-sm  ms-2\" @click=\"cancelEdit(index)\">취소</button>\n                                </div>\n                            </div>\n\n                            <p v-else class=\"card-text m-0\">{{ commentdata.content }}</p>\n\n                            <p class=\"text-body-tertiary m-0\" style=\"text-align: end; font-size: 13px;\">{{ formatDate(commentdata.create_date) }}</p>\n                        </div>\n                    </div>\n                </div>\n                <hr style=\"margin-bottom:0\"/>\n            </div>\n            <div class=\"card-body d-flex pb-0\">\n                <div class=\"d-flex\" style=\"align-items: flex-start\">\n                    <img :src=\"require(`../assets/img/${user_img}`)\" style=\"width: 50px;border-radius: 50%;\">\n                </div>\n                <div class=\"form-control ms-2\" id=\"comment\" style=\"height: auto; min-height: 80px;\">\n                    <div contenteditable=\"false\" style=\"font-weight: bold;\">{{ user_name }}</div>\n                    <div contenteditable=\"true\" ref=\"editableContent\" @input=\"updateComment\" style=\"outline: none; border: 2px solid transparent;\"></div>\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-end\">\n                <button type=\"button\" class=\"btn btn-outline-primary m-3\" @click=\"commentAdd(selectPost.post_id)\">등록</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            comments: [],\n            user_img: sessionStorage.getItem('user_img'),\n            user_name: sessionStorage.getItem('user_name'),\n            commentText: '',\n            commentCount: this.selectPost.comment_count,\n            dropdownVisible: false,\n            isEditingPost: false,\n            editTitle: '',\n            editContent: ''\n        };\n    },\n    props: {\n        selectPost: Object\n    },\n    mounted() {\n        this.commentList();\n    },\n    methods: {\n        toggleDropdown() {\n            this.dropdownVisible = !this.dropdownVisible;\n        },\n        editPost(post_id) {\n            this.editTitle = this.selectPost.title;\n            this.editContent = this.stripHtml(this.selectPost.content);\n            this.isEditingPost = true;\n            this.dropdownVisible = false;\n            this.$emit('updateStatusEdit',post_id)\n        },\n        cancelPostEdit() {\n            this.isEditingPost = false;\n        },\n        async savePostEdit() {\n            try {\n                const response = await axios.post('http://127.0.0.1:3000/postedit', {\n                    post_id: this.selectPost.post_id,\n                    title: this.editTitle,\n                    content: this.editContent\n                });\n                if (response.data.status === 'success') {\n                    // this.selectPost.title = this.editTitle;\n                    // this.selectPost.content = this.editContent;\n                    this.isEditingPost = false;\n                } else {\n                    console.error('Failed to edit post');\n                }\n            } catch (error) {\n                console.error('Error editing post:', error);\n            }\n        },\n        async deletePost() {\n            if (confirm(\"삭제하시겠습니까?\")) {\n                try {\n                    const response = await axios.post('http://127.0.0.1:3000/postdelete', {\n                        post_id: this.selectPost.post_id\n                    });\n                    if (response.data.status === 'success') {\n                        alert('게시글이 삭제되었습니다.');\n                        this.$emit('postDeleted', this.selectPost.post_id);\n                    } else {\n                        console.error('Failed to delete post');\n                    }\n                } catch (error) {\n                    console.error('Error deleting post:', error);\n                }\n            }\n        },\n        toggleEdit(index) {\n            this.comments[index].isEditing = !this.comments[index].isEditing;\n            if (this.comments[index].isEditing) {\n                this.comments[index].editContent = this.comments[index].content;\n            }\n        },\n        cancelEdit(index) {\n            this.comments[index].isEditing = false;\n        },\n        async saveEdit(index, comment_id) {\n            if (confirm(\"수정하시겠습니까?\")) {\n                const editedComment = this.comments[index].editContent;\n                try {\n                    const response = await axios.post('http://127.0.0.1:3000/commentedit', {\n                        comment_id: comment_id,\n                        content: editedComment\n                    });\n                    if (response.data.status === 'success') {\n                        this.comments[index].content = editedComment;\n                        this.comments[index].isEditing = false;\n                    } else {\n                        console.error('Failed to edit comment');\n                    }\n                } catch (error) {\n                    console.error('Error editing comment:', error);\n                }\n            }\n        },\n        async commentDelete(index, comment_id) {\n            if (confirm(\"삭제하시겠습니까?\")) {\n                try {\n                    const response = await axios.post('http://127.0.0.1:3000/commentdelete', {\n                        comment_id: comment_id\n                    });\n                    if (response.data.status === 'success') {\n                        this.comments.splice(index, 1); // 배열에서 해당 댓글을 완전히 제거합니다.\n                        this.commentCount -= 1;         // 댓글 수를 하나 줄입니다.\n                    } else {\n                        console.error('Failed to delete comment');\n                    }\n                } catch (error) {\n                    console.error('Error deleting comment:', error);\n                }\n            }\n        },\n        updateComment(event) {\n            this.commentText = event.target.innerText;\n        },\n        formatDate(dateString) {\n            let date = new Date(dateString);\n            let year = date.getFullYear();\n            let month = ('0' + (date.getMonth() + 1)).slice(-2);\n            let day = ('0' + date.getDate()).slice(-2);\n            let hours = ('0' + date.getHours()).slice(-2);\n            let minutes = ('0' + date.getMinutes()).slice(-2);\n            return `${year}-${month}-${day} ${hours}:${minutes}`;\n        },\n        stripHtml(html) {\n            let doc = new DOMParser().parseFromString(html, 'text/html');\n            let text = doc.body.textContent || \"\";\n            return text;\n        },\n        async commentAdd(post_id) {\n            try {\n                const user_id = sessionStorage.getItem('user_id');\n                const comment = this.commentText;\n                const response = await axios.get(`http://127.0.0.1:3000/commentadd`, {\n                    params: {\n                        post_id: post_id,\n                        user_id: user_id,\n                        comment: comment\n                    }\n                });\n                if (response.data.status === 'success') {\n                    this.commentList();\n                    this.commentText = '';\n                    this.$refs.editableContent.innerText = '';\n                    this.commentCount = this.commentCount + 1;\n                    alert('댓글이 등록되었습니다.');\n                } else {\n                    console.log('댓글 등록 실패');\n                }\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            }\n        },\n        async commentList() {\n            try {\n                const response = await axios.get(`http://127.0.0.1:3000/commentlist`, {\n                    params: {\n                        post_id: this.selectPost.post_id\n                    }\n                });\n                if (response.data.status === 'success') {\n                    this.comments = response.data.res.map(comment => ({\n                        ...comment,\n                        isEditing: false,\n                        editContent: ''\n                    }));\n                } else {\n                    console.error('Failed to fetch comments:', response.data.message);\n                }\n            } catch (error) {\n                console.error('Error fetching comments:', error);\n            }\n        }\n    }\n};\n</script>\n\n<style>\ndiv[contenteditable=\"true\"]:focus {\n    border-color: #5FC8A5;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}