{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ModalProfile',\n  data() {\n    return {\n      user_id: sessionStorage.getItem('user_id'),\n      user_name: sessionStorage.getItem('user_name'),\n      user_img: sessionStorage.getItem('user_img')\n    };\n  },\n  methods: {\n    logout() {\n      if (confirm('logout을 진행하시겠습니까?')) {\n        sessionStorage.removeItem('user_id');\n        sessionStorage.removeItem('user_name');\n        this.user_id = null;\n        this.user_name = null;\n        window.location.reload();\n      }\n    },\n    onFileChange(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const formData = new FormData();\n        formData.append('file', file);\n        axios.post('http://127.0.0.1:3000/UploadFile', {\n          formData\n        }).then(res => {\n          console.log(res.data);\n          if (res.data.status === 'success') {\n            sessionStorage.setItem('user_id', res.data.user_id);\n            sessionStorage.setItem('user_name', res.data.user_name);\n            sessionStorage.setItem('user_img', res.data.user_img);\n            this.errorMessage = '';\n            window.location.reload();\n          } else {\n            this.errorMessage = '아이디 또는 비밀번호가 다릅니다.';\n          }\n        }).catch(e => {\n          console.error('에러', e);\n          this.errorMessage = '서버에 연결할 수 없습니다.';\n        });\n\n        // 서버로 파일을 업로드\n        axios.post('http://127.0.0.1:3000/login', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(response => {\n          console.log(response);\n          if (response.data.success) {\n            this.user_img = response.data.filename;\n          } else {\n            alert('파일 업로드 실패');\n          }\n        }).catch(error => {\n          console.error('Error uploading file:', error);\n        });\n      }\n    }\n    // ProfileLoad() {\n    // axios.post('http://127.0.0.1:3000/profileload', {\n    //   user_id: this.user_id\n    // }).then(res => {\n    //   if (res.data.status === 'success') {\n    //     console.log(res.data);\n    //     this.user_img = res.data[0].img;\n\n    //   } else {\n    //     this.errorMessage = '데이터 오류.';\n    //   }\n    // }).catch(e => {\n    //   console.error('에러', e); \n    //   this.errorMessage = '서버에 연결할 수 없습니다.';\n    // });\n    // }\n  }\n};","map":{"version":3,"names":["axios","name","data","user_id","sessionStorage","getItem","user_name","user_img","methods","logout","confirm","removeItem","window","location","reload","onFileChange","event","file","target","files","formData","FormData","append","post","then","res","console","log","status","setItem","errorMessage","catch","e","error","headers","response","success","filename","alert"],"sources":["/var/www/front/src/components/Modal/ModalProfile.vue"],"sourcesContent":["<template>\n    <div class=\"modal-body\">\n        <!-- tab -->\n        <ul class=\"nav nav-tabs\" role=\"tablist\">\n          <li class=\"nav-item\" role=\"presentation\">\n              <a class=\"nav-link active\" data-bs-toggle=\"tab\" href=\"#profile\" aria-selected=\"false\" role=\"tab\" tabindex=\"-1\">Profile</a>\n          </li>\n        </ul>\n        <div id=\"myTabContent\" class=\"tab-content\">\n          <!-- 로그인 -->\n          <div class=\"tab-pane fade active show\" id=\"profile\" role=\"tabpanel\">\n              <div class=\"card border-success m-3\">\n                <div class=\"d-flex align-items-center\">\n                  <img class=\"d-flex justify-content-center w-50 \" :src=\"require(`../../assets/img/${user_img}`)\" style=\"border-radius: 50%; cursor: pointer;\" @click=\"$refs.imgFlie.click()\">\n                  <input type=\"file\" ref=\"imgFlie\" @change=\"onFileChange\" style=\"display: none;\" accept=\"image/*\">\n                </div>\n                <div class=\"card-body\">\n                    <label class=\"form-label mt-4\">이름</label>\n                    <div class=\"form-floating mb-3\">\n                      <input type=\"text\" class=\"form-control\" id=\"user_name\" v-model=\"user_name\" placeholder=\"user_name\">\n                      <label for=\"user_name\">이름</label>\n                    </div>\n                    <label class=\"form-label mt-4\">비밀번호 변경</label>\n                    <div class=\"form-floating\">\n                      <input type=\"password\" class=\"form-control\" id=\"LoginPW\" v-model=\"loginPW\" placeholder=\"LoginPW\" autocomplete=\"off\">\n                      <label for=\"LoginPW\">기존 비밀번호를 입력하세요.</label>\n                    </div>\n                    <div class=\"form-floating mt-4\">\n                      <input type=\"password\" class=\"form-control\" id=\"newLoginPW\" v-model=\"newLoginPW\" placeholder=\"LoginPW\" autocomplete=\"off\">\n                      <label for=\"newLoginPW\">새 비밀번호를 입력하세요.</label>\n                    </div>\n                    <div class=\"form-floating mt-4\">\n                      <input type=\"password\" class=\"form-control\" id=\"newLoginPWChack\" v-model=\"newLoginPWChack\" placeholder=\"LoginPW\" autocomplete=\"off\">\n                      <label for=\"newLoginPWChack\">새 비밀번호 확인</label>\n                    </div>\n                    <!-- 오류 메시지 -->\n                    <div v-if=\"errorMessage\" class=\"alert alert-danger m-3\">\n                    <strong>{{ errorMessage }}</strong>\n                    </div>\n                    <div class=\"d-flex m-3\" style=\"justify-content: center;\">\n                    <button type=\"button\" class=\"btn btn-success\" @click=\"Login\">Login</button>\n                    </div>\n\n                </div>\n              </div>\n          </div>\n        </div>\n    </div>\n  </template>\n  <script>\n  import axios  from 'axios';\n\n  export default {\n    name: 'ModalProfile',\n    data() {\n      return{\n        user_id: sessionStorage.getItem('user_id'),\n        user_name: sessionStorage.getItem('user_name'),\n        user_img: sessionStorage.getItem('user_img'),\n      }\n    },\n    methods: {\n        logout() {\n          if (confirm('logout을 진행하시겠습니까?')) {\n            sessionStorage.removeItem('user_id');\n            sessionStorage.removeItem('user_name');\n            \n            this.user_id = null;\n            this.user_name = null;\n            \n            window.location.reload();\n          }\n        },\n        onFileChange(event) {\n          const file = event.target.files[0];\n          if (file) {\n            const formData = new FormData();\n            formData.append('file', file);\n\n            axios.post('http://127.0.0.1:3000/UploadFile', {\n              formData\n            }).then(res => {\n                console.log(res.data);\n                if (res.data.status === 'success') {\n                  sessionStorage.setItem('user_id', res.data.user_id);\n                  sessionStorage.setItem('user_name', res.data.user_name);\n                  sessionStorage.setItem('user_img', res.data.user_img);\n                  this.errorMessage = '';\n                  window.location.reload();\n                }else{\n                  this.errorMessage = '아이디 또는 비밀번호가 다릅니다.';\n                }\n            }).catch(e => {\n                console.error('에러', e); \n                this.errorMessage = '서버에 연결할 수 없습니다.';\n            });\n\n\n            // 서버로 파일을 업로드\n            axios.post('http://127.0.0.1:3000/login', formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            }).then(response => {\n              console.log(response);\n              if (response.data.success) {\n                this.user_img = response.data.filename\n              } else {\n                alert('파일 업로드 실패');\n              }\n            }).catch(error => {\n              console.error('Error uploading file:', error);\n            });\n          }\n        }\n        // ProfileLoad() {\n        // axios.post('http://127.0.0.1:3000/profileload', {\n        //   user_id: this.user_id\n        // }).then(res => {\n        //   if (res.data.status === 'success') {\n        //     console.log(res.data);\n        //     this.user_img = res.data[0].img;\n\n\n        //   } else {\n        //     this.errorMessage = '데이터 오류.';\n        //   }\n        // }).catch(e => {\n        //   console.error('에러', e); \n        //   this.errorMessage = '서버에 연결할 수 없습니다.';\n        // });\n      // }\n    }\n  };\n  </script>\n  \n  <style>\n\n  </style>"],"mappings":"AAkDE,OAAOA,KAAI,MAAQ,OAAO;AAE1B,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAM;MACJC,OAAO,EAAEC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;MAC1CC,SAAS,EAAEF,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;MAC9CE,QAAQ,EAAEH,cAAc,CAACC,OAAO,CAAC,UAAU;IAC7C;EACF,CAAC;EACDG,OAAO,EAAE;IACLC,MAAMA,CAAA,EAAG;MACP,IAAIC,OAAO,CAAC,mBAAmB,CAAC,EAAE;QAChCN,cAAc,CAACO,UAAU,CAAC,SAAS,CAAC;QACpCP,cAAc,CAACO,UAAU,CAAC,WAAW,CAAC;QAEtC,IAAI,CAACR,OAAM,GAAI,IAAI;QACnB,IAAI,CAACG,SAAQ,GAAI,IAAI;QAErBM,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B;IACF,CAAC;IACDC,YAAYA,CAACC,KAAK,EAAE;MAClB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;QAE7BjB,KAAK,CAACuB,IAAI,CAAC,kCAAkC,EAAE;UAC7CH;QACF,CAAC,CAAC,CAACI,IAAI,CAACC,GAAE,IAAK;UACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACvB,IAAI,CAAC;UACrB,IAAIuB,GAAG,CAACvB,IAAI,CAAC0B,MAAK,KAAM,SAAS,EAAE;YACjCxB,cAAc,CAACyB,OAAO,CAAC,SAAS,EAAEJ,GAAG,CAACvB,IAAI,CAACC,OAAO,CAAC;YACnDC,cAAc,CAACyB,OAAO,CAAC,WAAW,EAAEJ,GAAG,CAACvB,IAAI,CAACI,SAAS,CAAC;YACvDF,cAAc,CAACyB,OAAO,CAAC,UAAU,EAAEJ,GAAG,CAACvB,IAAI,CAACK,QAAQ,CAAC;YACrD,IAAI,CAACuB,YAAW,GAAI,EAAE;YACtBlB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;UAC1B,CAAC,MAAI;YACH,IAAI,CAACgB,YAAW,GAAI,oBAAoB;UAC1C;QACJ,CAAC,CAAC,CAACC,KAAK,CAACC,CAAA,IAAK;UACVN,OAAO,CAACO,KAAK,CAAC,IAAI,EAAED,CAAC,CAAC;UACtB,IAAI,CAACF,YAAW,GAAI,iBAAiB;QACzC,CAAC,CAAC;;QAGF;QACA9B,KAAK,CAACuB,IAAI,CAAC,6BAA6B,EAAEH,QAAQ,EAAE;UAClDc,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC,CAACV,IAAI,CAACW,QAAO,IAAK;UAClBT,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAAC;UACrB,IAAIA,QAAQ,CAACjC,IAAI,CAACkC,OAAO,EAAE;YACzB,IAAI,CAAC7B,QAAO,GAAI4B,QAAQ,CAACjC,IAAI,CAACmC,QAAO;UACvC,OAAO;YACLC,KAAK,CAAC,WAAW,CAAC;UACpB;QACF,CAAC,CAAC,CAACP,KAAK,CAACE,KAAI,IAAK;UAChBP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C,CAAC,CAAC;MACJ;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}