{"ast":null,"code":"// npm install @tiptap/vue-3 @tiptap/starter-kit @tiptap/extension-underline @tiptap/extension-text-align @tiptap/extension-link @tiptap/extension-image\nimport axios from 'axios';\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport { Editor } from '@tiptap/vue-3';\nimport StarterKit from '@tiptap/starter-kit';\nimport Underline from '@tiptap/extension-underline';\nimport TextAlign from '@tiptap/extension-text-align';\nimport Link from '@tiptap/extension-link';\nimport Image from '@tiptap/extension-image';\nimport BoardWriteBar from './BoardWriteBar.vue';\nexport default {\n  components: {\n    BoardWriteBar\n  },\n  setup(props) {\n    const editor = ref(null);\n    const editorElement = ref(null);\n    const title = ref('');\n    const category = ref(''); // 새로 추가된 부분\n    const user_id = ref(sessionStorage.getItem('user_id')); // `setup` 함수 내부에서 정의\n\n    console.log('zzzzzzzzzz');\n    if (props.selectBoard.content != '') {\n      const text = props.selectBoard.content;\n    } else {\n      const text = '<p>여기에 내용을 입력하세요.</p>';\n    }\n    console.log(text);\n    onMounted(() => {\n      editor.value = new Editor({\n        element: editorElement.value,\n        extensions: [StarterKit, Underline, TextAlign.configure({\n          types: ['heading', 'paragraph']\n        }), Link, Image],\n        content: 'www'\n      });\n    });\n    onBeforeUnmount(() => {\n      if (editor.value) {\n        editor.value.destroy();\n      }\n    });\n    const BoardWrite = () => {\n      const content = editor.value.getHTML();\n      console.log('Category:', category.value); // 새로 추가된 부분\n      console.log('Title:', title.value);\n      console.log('Content:', content);\n      console.log('user_id:', user_id.value);\n      if (content && title.value && category.value) {\n        // axios.post(`${this.$BackURL}/boardPostting`, {\n        axios.post(`${props.BackURL}/boardPostting`, {\n          content: content,\n          title: title.value,\n          category: category.value,\n          user_id: user_id.value\n        }).then(res => {\n          console.log(res.data);\n          if (res.data.status === 'success') {\n            alert('게시글이 작성 되었습니다.');\n            window.location.reload();\n          } else {\n            alert('postting 에러');\n          }\n        }).catch(e => {\n          console.error('에러', e);\n          alert('서버 에러');\n        });\n      } else {\n        alert('공백이 있습니다.');\n      }\n    };\n    return {\n      editor,\n      editorElement,\n      title,\n      category,\n      BoardWrite\n    }; // category 추가\n  },\n  props: {\n    categories: Object,\n    BackURL: String,\n    selectBoard: Object\n  }\n};","map":{"version":3,"names":["axios","ref","onMounted","onBeforeUnmount","Editor","StarterKit","Underline","TextAlign","Link","Image","BoardWriteBar","components","setup","props","editor","editorElement","title","category","user_id","sessionStorage","getItem","console","log","selectBoard","content","text","value","element","extensions","configure","types","destroy","BoardWrite","getHTML","post","BackURL","then","res","data","status","alert","window","location","reload","catch","e","error","categories","Object","String"],"sources":["/var/www/front/src/components/Board/BoardWrite.vue"],"sourcesContent":["<template>\n    <div class=\"editor mt-3\">\n      <BoardWriteBar v-if=\"editor\" :editor=\"editor\" />\n      <div class=\"d-flex mt-2 mb-3\">\n        <select v-model=\"category\" class=\"form-select w-25 me-1\" id=\"Category\">\n          <option value=\"\" disabled>카테고리</option>\n          <option v-for=\"(value, key) in categories\" :key=\"key\" :value=\"key\">{{ value }}</option>\n        </select>\n        <input v-model=\"title\" class=\"form-control\" placeholder=\"제목을 입력하세요\">\n      </div>\n      <div ref=\"editorElement\" class=\"editor-content\"></div>\n    </div>\n    <div class=\"d-flex justify-content-end\">\n      <button type=\"button\" class=\"btn btn-primary mt-3 mb-3\" @click=\"BoardWrite\">Save</button>\n    </div>\n    {{ selectBoard }}\n  </template>\n  \n  <script>\n// npm install @tiptap/vue-3 @tiptap/starter-kit @tiptap/extension-underline @tiptap/extension-text-align @tiptap/extension-link @tiptap/extension-image\n  import axios  from 'axios';\n  import { ref, onMounted, onBeforeUnmount } from 'vue';\n  import { Editor } from '@tiptap/vue-3';\n  import StarterKit from '@tiptap/starter-kit';\n  import Underline from '@tiptap/extension-underline';\n  import TextAlign from '@tiptap/extension-text-align';\n  import Link from '@tiptap/extension-link';\n  import Image from '@tiptap/extension-image';\n  import BoardWriteBar from './BoardWriteBar.vue';\n  export default {\n    components: {\n      BoardWriteBar,\n    },\n    setup(props) {\n      const editor = ref(null);\n      const editorElement = ref(null);\n      const title = ref('');\n      const category = ref(''); // 새로 추가된 부분\n      const user_id = ref(sessionStorage.getItem('user_id'));  // `setup` 함수 내부에서 정의\n    \n      console.log('zzzzzzzzzz');\n      if(props.selectBoard.content!=''){\n        const text = props.selectBoard.content;\n      }else{\n        const text = '<p>여기에 내용을 입력하세요.</p>';\n      }\n      console.log(text)\n\n\n      onMounted(() => {\n        editor.value = new Editor({\n          element: editorElement.value,\n          extensions: [\n            StarterKit,\n            Underline,\n            TextAlign.configure({\n              types: ['heading', 'paragraph'],\n            }),\n            Link,\n            Image,\n          ],\n          content: 'www',\n        });\n      });\n      onBeforeUnmount(() => {\n        if (editor.value) {\n          editor.value.destroy();\n        }\n      });\n      const BoardWrite = () => {\n\n        const content = editor.value.getHTML();\n        console.log('Category:', category.value); // 새로 추가된 부분\n        console.log('Title:', title.value);\n        console.log('Content:', content);\n        console.log('user_id:', user_id.value);\n\n        if (content && title.value && category.value) {\n              // axios.post(`${this.$BackURL}/boardPostting`, {\n              axios.post(`${props.BackURL}/boardPostting`, {\n                  content: content,\n                  title: title.value,\n                  category: category.value,\n                  user_id: user_id.value\n              }).then(res => {\n                  console.log(res.data);\n                  if (res.data.status === 'success') {\n                    alert('게시글이 작성 되었습니다.')\n                    window.location.reload();\n                  }else{\n                    alert('postting 에러');\n                  }\n              }).catch(e => {\n                  console.error('에러', e); \n                  alert('서버 에러');\n              });\n          } else {\n            alert('공백이 있습니다.');\n          }\n      };\n      return { editor, editorElement, title, category, BoardWrite }; // category 추가\n    },\n    props: {\n      categories:Object,\n      BackURL: String, \n      selectBoard: Object,\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .editor {\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    min-height: 50vh;\n    padding: 16px;\n  }\n  .editor-content {\n    min-height: 200px;\n  }\n  hr {\n    margin: 20px 0;\n    border: none;\n    border-top: 1px solid #ddd;\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}