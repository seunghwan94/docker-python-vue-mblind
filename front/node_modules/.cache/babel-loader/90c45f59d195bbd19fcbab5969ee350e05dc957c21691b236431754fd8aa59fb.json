{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    board_id: String\n  },\n  data() {\n    return {};\n  },\n  mounted() {\n    this.commentList();\n  },\n  methods: {\n    async commentList() {\n      try {\n        const response = await axios.get(`${this.$BackURL}/commentList`, {\n          params: {\n            board_id: this.board_id\n          }\n        });\n        if (response.data.status === 'success') {\n          this.comments = response.data.res.map(comment => ({\n            ...comment,\n            isEditing: false,\n            editContent: ''\n          }));\n        } else {\n          console.error('Failed to fetch comments:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","board_id","String","data","mounted","commentList","methods","response","get","$BackURL","params","status","comments","res","map","comment","isEditing","editContent","console","error","message"],"sources":["/var/www/front/src/components/Board/BoardComment.vue"],"sourcesContent":["<template>\n    <div class=\"card bg-light m-2\" style=\"max-width: 100%;\">\n        <div class=\"card-header\">댓글</div>\n    </div>\n\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n    props:{\n        board_id: String,\n    },\n    data(){\n        return{\n\n        }\n    },\n    mounted() {\n        this.commentList();\n    },\n    methods: {\n        async commentList() {\n            try {\n                const response = await axios.get(`${this.$BackURL}/commentList`, {\n                    params: {\n                        board_id: this.board_id\n                    }\n                });\n                if (response.data.status === 'success') {\n                    this.comments = response.data.res.map(comment => ({\n                        ...comment,\n                        isEditing: false,\n                        editContent: ''\n                    }));\n                } else {\n                    console.error('Failed to fetch comments:', response.data.message);\n                }\n            } catch (error) {\n                console.error('Error fetching comments:', error);\n            }\n        },\n    }\n}\n</script>\n<style>\n\n</style>"],"mappings":"AAOA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,KAAK,EAAC;IACFC,QAAQ,EAAEC;EACd,CAAC;EACDC,IAAIA,CAAA,EAAE;IACF,OAAM,CAEN;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,WAAW,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACL,MAAMD,WAAWA,CAAA,EAAG;MAChB,IAAI;QACA,MAAME,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,cAAc,EAAE;UAC7DC,MAAM,EAAE;YACJT,QAAQ,EAAE,IAAI,CAACA;UACnB;QACJ,CAAC,CAAC;QACF,IAAIM,QAAQ,CAACJ,IAAI,CAACQ,MAAK,KAAM,SAAS,EAAE;UACpC,IAAI,CAACC,QAAO,GAAIL,QAAQ,CAACJ,IAAI,CAACU,GAAG,CAACC,GAAG,CAACC,OAAM,KAAM;YAC9C,GAAGA,OAAO;YACVC,SAAS,EAAE,KAAK;YAChBC,WAAW,EAAE;UACjB,CAAC,CAAC,CAAC;QACP,OAAO;UACHC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEZ,QAAQ,CAACJ,IAAI,CAACiB,OAAO,CAAC;QACrE;MACJ,EAAE,OAAOD,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}