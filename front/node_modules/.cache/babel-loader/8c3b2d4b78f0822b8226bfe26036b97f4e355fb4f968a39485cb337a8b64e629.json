{"ast":null,"code":"import axios from 'axios';\nimport BoardList from './BoardList.vue';\nexport default {\n  data() {\n    return {\n      selectedCategory: '1',\n      categories: {},\n      posts: [],\n      totalPosts: 0,\n      currentPage: 1,\n      perPage: 10\n    };\n  },\n  created() {\n    this.fetchCategories();\n    this.fetchPosts();\n  },\n  methods: {\n    async fetchCategories() {\n      try {\n        const response = await axios.get(`${this.$BackURL}/category`);\n        console.log('ss');\n        if (response.data.status === 'success') {\n          this.categories = response.data.res.reduce((acc, category) => {\n            acc[category.id] = category.name;\n            return acc;\n          }, {});\n        } else {\n          console.error('Failed to fetch categories:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    },\n    async fetchPosts(page = this.currentPage) {\n      try {\n        const response = await axios.get(`${this.$BackURL}/boardList`, {\n          params: {\n            category_id: this.selectedCategory,\n            page: page,\n            per_page: this.perPage\n          }\n        });\n        if (response.data.status === 'success') {\n          this.posts = response.data.posts;\n          this.totalPosts = response.data.total_posts;\n        } else {\n          console.error('Failed to fetch posts:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    },\n    selectCategory(key) {\n      this.selectedCategory = key;\n      this.currentPage = 1; // Reset to the first page when category changes\n      this.fetchPosts();\n    },\n    updatePage(page) {\n      this.currentPage = page;\n      this.fetchPosts(page);\n    },\n    setActiveTab(tab) {\n      // Implement tab switching logic if needed\n      console.log('Tab switched to:', tab);\n    }\n  },\n  components: {\n    BoardList\n  }\n};","map":{"version":3,"names":["axios","BoardList","data","selectedCategory","categories","posts","totalPosts","currentPage","perPage","created","fetchCategories","fetchPosts","methods","response","get","$BackURL","console","log","status","res","reduce","acc","category","id","name","error","message","page","params","category_id","per_page","total_posts","selectCategory","key","updatePage","setActiveTab","tab","components"],"sources":["/var/www/front/src/components/Board/MainBoard.vue"],"sourcesContent":["<template>\n    <div class=\"d-flex\" style=\"flex-direction: column;\">\n      <div class=\"category-buttons\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-primary m-2\"\n          :class=\"{ active: selectedCategory === key }\"\n          v-for=\"(value, key) in categories\"\n          :key=\"key\"\n          @click=\"selectCategory(key)\">\n          {{ value }}\n        </button>\n      </div>\n      \n      <BoardList \n        :posts=\"posts\"\n        :selectedCategory=\"selectedCategory\"\n        :totalPosts=\"totalPosts\"\n        :currentPage=\"currentPage\"\n        :perPage=\"perPage\"\n        @updatePage=\"updatePage\"\n        @updateStatus=\"setActiveTab\"\n      />\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  import BoardList from './BoardList.vue';\n  \n  export default {\n    data() {\n      return {\n        selectedCategory: '1',\n        categories: {},\n        posts: [],\n        totalPosts: 0,\n        currentPage: 1,\n        perPage: 10,\n      }\n    },\n    created() {\n      this.fetchCategories();\n      this.fetchPosts();\n    },\n    methods: {\n      async fetchCategories() {\n        try {\n            const response = await axios.get(`${this.$BackURL}/category`);\n            console.log('ss')\n          if (response.data.status === 'success') {\n            this.categories = response.data.res.reduce((acc, category) => {\n              acc[category.id] = category.name;\n              return acc;\n            }, {});\n          } else {\n            console.error('Failed to fetch categories:', response.data.message);\n          }\n        } catch (error) {\n          console.error('Error fetching categories:', error);\n        }\n      },\n      async fetchPosts(page = this.currentPage) {\n        try {\n          const response = await axios.get(`${this.$BackURL}/boardList`, {\n            params: {\n              category_id: this.selectedCategory,\n              page: page,\n              per_page: this.perPage\n            }\n          });\n          if (response.data.status === 'success') {\n            this.posts = response.data.posts;\n            this.totalPosts = response.data.total_posts;\n          } else {\n            console.error('Failed to fetch posts:', response.data.message);\n          }\n        } catch (error) {\n          console.error('Error fetching posts:', error);\n        }\n      },\n      selectCategory(key) {\n        this.selectedCategory = key;\n        this.currentPage = 1; // Reset to the first page when category changes\n        this.fetchPosts();\n      },\n      updatePage(page) {\n        this.currentPage = page;\n        this.fetchPosts(page);\n      },\n      setActiveTab(tab) {\n        // Implement tab switching logic if needed\n        console.log('Tab switched to:', tab);\n      }\n    },\n    components: {\n      BoardList\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .container {\n    padding: 20px;\n  }\n  .category-buttons {\n    margin-bottom: 20px;\n  }\n  </style>\n  "],"mappings":"AA2BE,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,SAAQ,MAAO,iBAAiB;AAEvC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,GAAG;MACrBC,UAAU,EAAE,CAAC,CAAC;MACdC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,CAAC;MACbC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;IACtB,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,eAAeA,CAAA,EAAG;MACtB,IAAI;QACA,MAAMG,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,WAAW,CAAC;QAC7DC,OAAO,CAACC,GAAG,CAAC,IAAI;QAClB,IAAIJ,QAAQ,CAACX,IAAI,CAACgB,MAAK,KAAM,SAAS,EAAE;UACtC,IAAI,CAACd,UAAS,GAAIS,QAAQ,CAACX,IAAI,CAACiB,GAAG,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;YAC5DD,GAAG,CAACC,QAAQ,CAACC,EAAE,IAAID,QAAQ,CAACE,IAAI;YAChC,OAAOH,GAAG;UACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QACR,OAAO;UACLL,OAAO,CAACS,KAAK,CAAC,6BAA6B,EAAEZ,QAAQ,CAACX,IAAI,CAACwB,OAAO,CAAC;QACrE;MACF,EAAE,OAAOD,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACD,MAAMd,UAAUA,CAACgB,IAAG,GAAI,IAAI,CAACpB,WAAW,EAAE;MACxC,IAAI;QACF,MAAMM,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,YAAY,EAAE;UAC7Da,MAAM,EAAE;YACNC,WAAW,EAAE,IAAI,CAAC1B,gBAAgB;YAClCwB,IAAI,EAAEA,IAAI;YACVG,QAAQ,EAAE,IAAI,CAACtB;UACjB;QACF,CAAC,CAAC;QACF,IAAIK,QAAQ,CAACX,IAAI,CAACgB,MAAK,KAAM,SAAS,EAAE;UACtC,IAAI,CAACb,KAAI,GAAIQ,QAAQ,CAACX,IAAI,CAACG,KAAK;UAChC,IAAI,CAACC,UAAS,GAAIO,QAAQ,CAACX,IAAI,CAAC6B,WAAW;QAC7C,OAAO;UACLf,OAAO,CAACS,KAAK,CAAC,wBAAwB,EAAEZ,QAAQ,CAACX,IAAI,CAACwB,OAAO,CAAC;QAChE;MACF,EAAE,OAAOD,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDO,cAAcA,CAACC,GAAG,EAAE;MAClB,IAAI,CAAC9B,gBAAe,GAAI8B,GAAG;MAC3B,IAAI,CAAC1B,WAAU,GAAI,CAAC,EAAE;MACtB,IAAI,CAACI,UAAU,CAAC,CAAC;IACnB,CAAC;IACDuB,UAAUA,CAACP,IAAI,EAAE;MACf,IAAI,CAACpB,WAAU,GAAIoB,IAAI;MACvB,IAAI,CAAChB,UAAU,CAACgB,IAAI,CAAC;IACvB,CAAC;IACDQ,YAAYA,CAACC,GAAG,EAAE;MAChB;MACApB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEmB,GAAG,CAAC;IACtC;EACF,CAAC;EACDC,UAAU,EAAE;IACVpC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}