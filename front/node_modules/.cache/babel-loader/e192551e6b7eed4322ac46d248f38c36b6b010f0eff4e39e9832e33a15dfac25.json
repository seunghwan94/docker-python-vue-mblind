{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ModalLogin',\n  data() {\n    return {\n      loginID: '',\n      loginPW: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    Login() {\n      if (this.loginID && this.loginPW) {\n        axios.post(`${this.$BackURL}/login`, {\n          loginID: this.loginID,\n          loginPW: this.loginPW\n        }).then(res => {\n          console.log(res.data);\n          if (res.data.status === 'success') {\n            sessionStorage.setItem('user_id', res.data.user_id);\n            sessionStorage.setItem('user_name', res.data.user_name);\n            sessionStorage.setItem('user_img', res.data.user_img);\n            this.errorMessage = '';\n            window.location.reload();\n          } else {\n            this.errorMessage = '아이디 또는 비밀번호가 다릅니다.';\n          }\n        }).catch(e => {\n          console.error('에러', e);\n          this.errorMessage = '서버에 연결할 수 없습니다.';\n        });\n      } else {\n        this.errorMessage = '공백이 있습니다.';\n      }\n    },\n    SignUp() {\n      if (this.signUpName && this.signUpID && this.signUpPW && this.confirmPW) {\n        if (this.signUpPW === this.confirmPW) {\n          axios.post(`${this.$BackURL}/signUp`, {\n            signUpID: this.signUpID,\n            signUpPW: this.signUpPW,\n            signUpName: this.signUpName\n          }).then(res => {\n            console.log(res.data);\n            if (res.data.status === 'success') {\n              this.signUpName = '';\n              this.signUpID = '';\n              this.signUpPW = '';\n              this.confirmPW = '';\n              this.errorMessage = '';\n              alert('회원가입이 성공적으로 완료되었습니다.');\n\n              // 로그인 탭으로 전환\n              this.$nextTick(() => {\n                document.querySelector('a[href=\"#login\"]').click();\n              });\n            } else {\n              this.errorMessage = '존재하는 아이디입니다.';\n            }\n          }).catch(e => {\n            console.error('에러', e);\n            this.errorMessage = '서버에 연결할 수 없습니다.';\n          });\n        } else {\n          alert('비밀번호가 일치하지 않습니다.');\n        }\n      } else {\n        alert('모든 필드를 채워주세요.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","loginID","loginPW","errorMessage","methods","Login","post","$BackURL","then","res","console","log","status","sessionStorage","setItem","user_id","user_name","user_img","window","location","reload","catch","e","error","SignUp","signUpName","signUpID","signUpPW","confirmPW","alert","$nextTick","document","querySelector","click"],"sources":["/var/www/front/src/components/Modal/ModalLogin.vue"],"sourcesContent":["<template>\n    <div class=\"modal-body\">\n        <!-- tab -->\n        <ul class=\"nav nav-tabs\" role=\"tablist\">\n          <li class=\"nav-item\" role=\"presentation\">\n              <a class=\"nav-link active\" data-bs-toggle=\"tab\" href=\"#login\" aria-selected=\"false\" role=\"tab\" tabindex=\"-1\">Login</a>\n          </li>\n          <li class=\"nav-item\" role=\"presentation\">\n              <a class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#signUp\" aria-selected=\"true\" role=\"tab\">Sign Up</a>\n          </li>\n        </ul>\n        <div id=\"myTabContent\" class=\"tab-content\">\n          <!-- 로그인 -->\n          <div class=\"tab-pane fade active show\" id=\"login\" role=\"tabpanel\">\n              <div class=\"card border-success m-3\">\n              <h1 class=\"text-success text-center m-5\" style=\"font-weight:bold;\">m-lind</h1>\n              <div class=\"card-body\">\n                  <div class=\"form-floating mb-3\">\n                  <input type=\"email\" class=\"form-control\" id=\"LoginID\" v-model=\"loginID\" placeholder=\"LoginID\">\n                  <label for=\"LoginID\">아이디를 입력하세요.</label>\n                  </div>\n                  <div class=\"form-floating\">\n                  <input type=\"password\" class=\"form-control\" id=\"LoginPW\" v-model=\"loginPW\" placeholder=\"LoginPW\" autocomplete=\"off\">\n                  <label for=\"LoginPW\">비밀번호를 입력하세요.</label>\n                  </div>\n                  <!-- 오류 메시지 -->\n                  <div v-if=\"errorMessage\" class=\"alert alert-danger m-3\">\n                  <strong>{{ errorMessage }}</strong>\n                  </div>\n                  <div class=\"d-flex m-3\" style=\"justify-content: center;\">\n                  <button type=\"button\" class=\"btn btn-success\" @click=\"Login\">Login</button>\n                  </div>\n\n              </div>\n              </div>\n          </div>\n          <!-- 회원가입 -->\n          <div class=\"tab-pane fade\" id=\"signUp\" role=\"tabpanel\">\n              <div class=\"card border-success m-3\">\n              <h1 class=\"text-success text-center m-5\" style=\"font-weight:bold;\">Sign Up</h1>\n              <div class=\"card-body\">\n                  <!-- 이름 -->\n                  <label class=\"form-label\">\n                  <p class=\"text-success m-0\">회원님의 이름을 작성해주세요.</p>\n                  </label>\n                  <div class=\"form-floating mb-3\">\n                  <input type=\"text\" class=\"form-control\" id=\"signUpName\" v-model=\"signUpName\" placeholder=\"signUpName\">\n                  <label for=\"signUpName\">이름 입력</label>\n                  </div>\n                  <!-- 아이디 -->\n                  <label class=\"form-label\">\n                  <p class=\"text-success m-0\">회원 가입할 아이디를 입력하세요.</p>\n                  </label>\n                  <div class=\"form-floating mb-3\">\n                  <input type=\"text\" class=\"form-control\" id=\"signUpID\" v-model=\"signUpID\" placeholder=\"signUpID\">\n                  <label for=\"signUpID\">아이디 입력</label>\n                  </div>\n                  <!-- 비밀번호 -->\n                  <label class=\"form-label\">\n                  <p class=\"text-success m-0\">비밀번호를 입력하세요.</p>\n                  </label>\n                  <div class=\"form-floating mb-3\">\n                  <input type=\"password\" class=\"form-control\" id=\"signUpPW\" v-model=\"signUpPW\" placeholder=\"Password\" autocomplete=\"off\">\n                  <label for=\"signUpPW\">비밀번호 입력</label>\n                  </div>\n                  <!-- 비밀번호 확인 -->\n                  <label class=\"form-label\">\n                  <p class=\"text-success m-0\">비밀번호 확인</p>\n                  </label>\n                  <div class=\"form-floating\">\n                  <input type=\"password\" class=\"form-control\" id=\"confirmPW\" v-model=\"confirmPW\" placeholder=\"Password\" autocomplete=\"off\">\n                  <label for=\"confirmPW\">비밀번호 확인</label>\n                  </div>\n                  <div class=\"d-flex m-3\" style=\"justify-content: center;\">\n                  <button type=\"button\" class=\"btn btn-success\" @click=\"SignUp\">Sign Up</button>\n                  </div>\n\n              </div>\n              </div>\n          </div>\n        </div>\n    </div>\n  </template>\n  <script>\n  import axios  from 'axios';\n\n  export default {\n    name: 'ModalLogin',\n    data() {\n      return {\n        loginID: '',\n        loginPW: '',\n        errorMessage: ''\n      };\n    },\n    methods: {\n      Login() {\n        if (this.loginID && this.loginPW) {\n            axios.post(`${this.$BackURL}/login`, {\n                loginID: this.loginID,\n                loginPW: this.loginPW\n            }).then(res => {\n                console.log(res.data);\n                if (res.data.status === 'success') {\n                  sessionStorage.setItem('user_id', res.data.user_id);\n                  sessionStorage.setItem('user_name', res.data.user_name);\n                  sessionStorage.setItem('user_img', res.data.user_img);\n                  this.errorMessage = '';\n                  window.location.reload();\n                }else{\n                  this.errorMessage = '아이디 또는 비밀번호가 다릅니다.';\n                }\n            }).catch(e => {\n                console.error('에러', e); \n                this.errorMessage = '서버에 연결할 수 없습니다.';\n            });\n        } else {\n          this.errorMessage = '공백이 있습니다.';\n        }\n      },\n      SignUp() {\n        if (this.signUpName && this.signUpID && this.signUpPW && this.confirmPW) {\n          if (this.signUpPW === this.confirmPW) {\n            axios.post(`${this.$BackURL}/signUp`, {\n              signUpID: this.signUpID,\n              signUpPW: this.signUpPW,\n              signUpName: this.signUpName\n            }).then(res => {\n              console.log(res.data);\n              if (res.data.status === 'success') {\n                this.signUpName = '';\n                this.signUpID = '';\n                this.signUpPW = '';\n                this.confirmPW = '';\n                this.errorMessage = '';\n\n                alert('회원가입이 성공적으로 완료되었습니다.');\n\n                // 로그인 탭으로 전환\n                this.$nextTick(() => {\n                  document.querySelector('a[href=\"#login\"]').click();\n                });\n              } else {\n                this.errorMessage = '존재하는 아이디입니다.';\n              }\n            }).catch(e => {\n              console.error('에러', e); \n              this.errorMessage = '서버에 연결할 수 없습니다.';\n            });\n          } else {\n            alert('비밀번호가 일치하지 않습니다.');\n          }\n        } else {\n          alert('모든 필드를 채워주세요.');\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style>\n\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}