{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card border-success mb-3\",\n  style: {\n    \"max-width\": \"100%\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"card-header d-flex\",\n  style: {\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"card-text\"\n};\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"d-flex justify-content-between\"\n};\nconst _hoisted_6 = {\n  class: \"card-title mt-3 mb-3\"\n};\nconst _hoisted_7 = {\n  class: \"dropdown\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-three-dots-vertical\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_9 = [_hoisted_8];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"dropdown-menu show\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"d-flex justify-content-end mb-3\"\n};\nconst _hoisted_12 = {\n  class: \"d-flex mt-5\",\n  style: {\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_13 = {\n  class: \"text-body-tertiary pe-2 m-0\"\n};\nconst _hoisted_14 = {\n  class: \"d-flex justify-content-end\"\n};\nconst _hoisted_15 = {\n  class: \"text-body-tertiary pe-2 m-0\"\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-eye\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_17 = {\n  class: \"text-body-tertiary pe-2 m-0\"\n};\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-chat-dots\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_19 = {\n  class: \"card bg-light m-2\",\n  style: {\n    \"max-width\": \"100%\"\n  }\n};\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header\"\n}, \"댓글\", -1 /* HOISTED */);\nconst _hoisted_21 = {\n  key: 0,\n  class: \"d-flex p-3 pb-0\",\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\"\n  }\n};\nconst _hoisted_22 = {\n  class: \"card-body align-items-center\",\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"row\"\n  }\n};\nconst _hoisted_23 = [\"src\"];\nconst _hoisted_24 = {\n  class: \"w-100 ps-4\"\n};\nconst _hoisted_25 = {\n  class: \"d-flex\",\n  style: {\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_26 = {\n  style: {\n    \"font-weight\": \"bold\",\n    \"margin\": \"0\"\n  }\n};\nconst _hoisted_27 = {\n  key: 0,\n  class: \"d-flex\"\n};\nconst _hoisted_28 = [\"onClick\"];\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-pencil-square\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_30 = [_hoisted_29];\nconst _hoisted_31 = [\"onClick\"];\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-trash\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_33 = [_hoisted_32];\nconst _hoisted_34 = {\n  key: 0\n};\nconst _hoisted_35 = [\"onUpdate:modelValue\"];\nconst _hoisted_36 = {\n  class: \"d-flex mt-2 mb-2\",\n  style: {\n    \"justify-content\": \"flex-end\"\n  }\n};\nconst _hoisted_37 = [\"onClick\"];\nconst _hoisted_38 = [\"onClick\"];\nconst _hoisted_39 = {\n  key: 1,\n  class: \"card-text m-0\"\n};\nconst _hoisted_40 = {\n  class: \"text-body-tertiary m-0\",\n  style: {\n    \"text-align\": \"end\",\n    \"font-size\": \"13px\"\n  }\n};\nconst _hoisted_41 = /*#__PURE__*/_createElementVNode(\"hr\", {\n  style: {\n    \"margin-bottom\": \"0\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_42 = {\n  class: \"card-body d-flex pb-0\"\n};\nconst _hoisted_43 = {\n  class: \"d-flex\",\n  style: {\n    \"align-items\": \"flex-start\"\n  }\n};\nconst _hoisted_44 = [\"src\"];\nconst _hoisted_45 = {\n  class: \"form-control ms-2\",\n  id: \"comment\",\n  style: {\n    \"height\": \"auto\",\n    \"min-height\": \"80px\"\n  }\n};\nconst _hoisted_46 = {\n  contenteditable: \"false\",\n  style: {\n    \"font-weight\": \"bold\"\n  }\n};\nconst _hoisted_47 = {\n  class: \"d-flex justify-content-end\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createTextVNode(_toDisplayString($props.selectBoard.category_name) + \" \", 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_3, _toDisplayString($props.selectBoard.user_username), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h4\", _hoisted_6, _toDisplayString($props.selectBoard.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", {\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleDropdown && $options.toggleDropdown(...args)),\n    style: {\n      \"cursor\": \"pointer\"\n    }\n  }, [..._hoisted_9]), $data.dropdownVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    class: \"dropdown-item\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.editPost($props.selectBoard.board_id))\n  }, \"수정\"), _createElementVNode(\"button\", {\n    class: \"dropdown-item\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.deletePost && _ctx.deletePost(...args))\n  }, \"삭제\")])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", null, _toDisplayString($options.stripHtml($props.selectBoard.content)), 1 /* TEXT */), $data.isEditingPost ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary btn-sm\",\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.savePostEdit && _ctx.savePostEdit(...args))\n  }, \"저장\"), _createElementVNode(\"button\", {\n    class: \"btn btn-secondary btn-sm ms-2\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.cancelPostEdit && $options.cancelPostEdit(...args))\n  }, \"취소\")])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"p\", _hoisted_13, _toDisplayString($options.formatDate($props.selectBoard.create_date)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"p\", _hoisted_15, [_hoisted_16, _createTextVNode(\" \" + _toDisplayString($props.selectBoard.view_count + 1), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_17, [_hoisted_18, _createTextVNode(\" \" + _toDisplayString($data.commentCount), 1 /* TEXT */)])])])]), _createElementVNode(\"div\", _hoisted_19, [_hoisted_20, $data.comments.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, (commentdata, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"card border-light mb-3\",\n      style: {\n        \"max-width\": \"100%\"\n      }\n    }, [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"img\", {\n      src: require(`../../assets/img/${commentdata.img}`),\n      style: {\n        \"width\": \"50px\",\n        \"border-radius\": \"50%\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_23), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"p\", _hoisted_26, _toDisplayString(commentdata.name), 1 /* TEXT */), commentdata.name === $data.user_name ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [_createElementVNode(\"div\", {\n      type: \"button\",\n      class: \"m-0\",\n      style: {\n        \"font-size\": \"16px\"\n      },\n      onClick: $event => $options.toggleEdit(index)\n    }, [..._hoisted_30], 8 /* PROPS */, _hoisted_28), _createElementVNode(\"div\", {\n      type: \"button\",\n      class: \"m-0 ms-1\",\n      style: {\n        \"font-size\": \"16px\"\n      },\n      onClick: $event => _ctx.commentDelete(index, commentdata.id)\n    }, [..._hoisted_33], 8 /* PROPS */, _hoisted_31)])) : _createCommentVNode(\"v-if\", true)]), commentdata.isEditing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_34, [_withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": $event => commentdata.editContent = $event,\n      class: \"form-control\",\n      rows: \"2\"\n    }, null, 8 /* PROPS */, _hoisted_35), [[_vModelText, commentdata.editContent]]), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"button\", {\n      class: \"btn btn-primary btn-sm\",\n      onClick: $event => _ctx.saveEdit(index, commentdata.id)\n    }, \"수정\", 8 /* PROPS */, _hoisted_37), _createElementVNode(\"button\", {\n      class: \"btn btn-secondary btn-sm ms-2\",\n      onClick: $event => $options.cancelEdit(index)\n    }, \"취소\", 8 /* PROPS */, _hoisted_38)])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_39, _toDisplayString(commentdata.content), 1 /* TEXT */)), _createElementVNode(\"p\", _hoisted_40, _toDisplayString($options.formatDate(commentdata.create_date)), 1 /* TEXT */)])])]);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_41])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_42, [_createElementVNode(\"div\", _hoisted_43, [_createElementVNode(\"img\", {\n    src: require(`../../assets/img/${$data.user_img}`),\n    style: {\n      \"width\": \"50px\",\n      \"border-radius\": \"50%\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_44)]), _createElementVNode(\"div\", _hoisted_45, [_createElementVNode(\"div\", _hoisted_46, _toDisplayString($data.user_name), 1 /* TEXT */), _createElementVNode(\"div\", {\n    contenteditable: \"true\",\n    ref: \"editableContent\",\n    onInput: _cache[5] || (_cache[5] = (...args) => $options.updateComment && $options.updateComment(...args)),\n    style: {\n      \"outline\": \"none\",\n      \"border\": \"2px solid transparent\"\n    }\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)])]), _createElementVNode(\"div\", _hoisted_47, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-outline-primary m-3\",\n    onClick: _cache[6] || (_cache[6] = $event => $options.commentAdd($props.selectBoard.board_id))\n  }, \"등록\")])])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_hoisted_8","key","_hoisted_29","_hoisted_32","id","contenteditable","_createElementBlock","_hoisted_1","_hoisted_2","_createTextVNode","_toDisplayString","$props","selectBoard","category_name","_hoisted_3","user_username","_hoisted_4","_hoisted_5","_hoisted_6","title","_hoisted_7","type","onClick","_cache","args","$options","toggleDropdown","_hoisted_9","$data","dropdownVisible","_hoisted_10","$event","editPost","board_id","_ctx","deletePost","_createCommentVNode","stripHtml","content","isEditingPost","_hoisted_11","savePostEdit","cancelPostEdit","_hoisted_12","_hoisted_13","formatDate","create_date","_hoisted_14","_hoisted_15","_hoisted_16","view_count","_hoisted_17","_hoisted_18","commentCount","_hoisted_19","_hoisted_20","comments","length","_hoisted_21","_Fragment","_renderList","commentdata","index","_hoisted_22","src","require","img","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","name","user_name","_hoisted_27","toggleEdit","_hoisted_30","_hoisted_28","commentDelete","_hoisted_33","_hoisted_31","isEditing","_hoisted_34","editContent","rows","_hoisted_35","_hoisted_36","saveEdit","_hoisted_37","cancelEdit","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","user_img","_hoisted_44","_hoisted_45","_hoisted_46","ref","onInput","updateComment","_hoisted_47","commentAdd"],"sources":["/var/www/front/src/components/Board/BoardView.vue"],"sourcesContent":["<!-- <template>\n    <div class=\"card border-success mb-3\" style=\"max-width: 100%\">\n        <div class=\"card-header d-flex\" style=\"justify-content: space-between;\">\n            {{ selectBoard.category_name }}\n            <p class=\"card-text\">{{ selectBoard.user_username }}</p>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between\">\n                <h4 class=\"card-title mt-3 mb-3\" v-if=\"!isEditingPost\">{{ selectBoard.title }}</h4>\n                <input v-else v-model=\"editTitle\" class=\"form-control mt-3 mb-3\" />\n                <div class=\"dropdown\">\n                    <div type=\"button\" @click=\"toggleDropdown\" style=\"cursor: pointer;\">\n                        <i class=\"bi bi-three-dots-vertical\"></i>\n                    </div>\n                    <div v-if=\"dropdownVisible\" class=\"dropdown-menu show\">\n                        <button class=\"dropdown-item\" @click=\"editPost(selectBoard.post_id)\">수정</button>\n                        <button class=\"dropdown-item\" @click=\"deletePost\">삭제</button>\n                    </div>\n                </div>\n            </div>\n            <div v-if=\"!isEditingPost\">{{ stripHtml(selectBoard.content) }}</div>\n            <textarea v-else v-model=\"editContent\" class=\"form-control mb-3\" rows=\"5\"></textarea>\n            <div v-if=\"isEditingPost\" class=\"d-flex justify-content-end mb-3\">\n                <button class=\"btn btn-primary btn-sm\" @click=\"savePostEdit\">저장</button>\n                <button class=\"btn btn-secondary btn-sm ms-2\" @click=\"cancelPostEdit\">취소</button>\n            </div>\n            <div class=\"d-flex mt-5\" style=\"justify-content: space-between;\">\n                <p class=\"text-body-tertiary pe-2 m-0\">{{ formatDate(selectBoard.create_date) }}</p>\n                <div class=\"d-flex justify-content-end\">\n                    <p class=\"text-body-tertiary pe-2 m-0\"><i class=\"bi bi-eye\"></i> {{ selectBoard.view_count }}</p>\n                    <p class=\"text-body-tertiary pe-2 m-0\"><i class=\"bi bi-chat-dots\"></i> {{ commentCount }}</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"card bg-light m-2\" style=\"max-width: 100%;\">\n            <div class=\"card-header\">댓글</div>\n            <div v-if=\"comments.length > 0\" class=\"d-flex p-3 pb-0 \" style=\"display:flex; flex-direction: column;\">\n                <div v-for=\"(commentdata, index) in comments\" :key=\"index\" class=\"card border-light mb-3\" style=\"max-width: 100%;\">\n                    <div class=\"card-body align-items-center\" style=\"display:flex;flex-direction: row;\">\n                        <img :src=\"require(`../assets/img/${commentdata.img}`)\" style=\"width: 50px;border-radius: 50%;\">\n                        <div class=\"w-100 ps-4\">\n                            <div class=\"d-flex\" style=\"align-items: center;justify-content: space-between;\">\n                                <p style=\"font-weight: bold; margin:0;\">{{ commentdata.name }}</p>\n                                <div class=\"d-flex\" v-if=\"commentdata.name === user_name\">\n                                    <div type=\"button\" class=\"m-0\" style=\"font-size: 16px;\" @click=\"toggleEdit(index)\"><i class=\"bi bi-pencil-square\"></i></div>\n                                    <div type=\"button\" class=\"m-0 ms-1\" style=\"font-size: 16px;\" @click=\"commentDelete(index, commentdata.id)\"><i class=\"bi bi-trash\"></i></div>\n                                </div>\n                            </div>\n\n                            <div v-if=\"commentdata.isEditing\">\n                                <textarea v-model=\"commentdata.editContent\" class=\"form-control\" rows=\"2\"></textarea>\n                                <div class=\"d-flex mt-2 mb-2\" style=\"justify-content: flex-end;\">\n                                    <button class=\"btn btn-primary btn-sm \" @click=\"saveEdit(index, commentdata.id)\">수정</button>\n                                    <button class=\"btn btn-secondary btn-sm  ms-2\" @click=\"cancelEdit(index)\">취소</button>\n                                </div>\n                            </div>\n\n                            <p v-else class=\"card-text m-0\">{{ commentdata.content }}</p>\n\n                            <p class=\"text-body-tertiary m-0\" style=\"text-align: end; font-size: 13px;\">{{ formatDate(commentdata.create_date) }}</p>\n                        </div>\n                    </div>\n                </div>\n                <hr style=\"margin-bottom:0\"/>\n            </div>\n            <div class=\"card-body d-flex pb-0\">\n                <div class=\"d-flex\" style=\"align-items: flex-start\">\n                    <img :src=\"require(`../assets/img/${user_img}`)\" style=\"width: 50px;border-radius: 50%;\">\n                </div>\n                <div class=\"form-control ms-2\" id=\"comment\" style=\"height: auto; min-height: 80px;\">\n                    <div contenteditable=\"false\" style=\"font-weight: bold;\">{{ user_name }}</div>\n                    <div contenteditable=\"true\" ref=\"editableContent\" @input=\"updateComment\" style=\"outline: none; border: 2px solid transparent;\"></div>\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-end\">\n                <button type=\"button\" class=\"btn btn-outline-primary m-3\" @click=\"commentAdd(selectBoard.post_id)\">등록</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            comments: [],\n            user_img: sessionStorage.getItem('user_img'),\n            user_name: sessionStorage.getItem('user_name'),\n            commentText: '',\n            commentCount: this.selectBoard.comment_count,\n            dropdownVisible: false,\n            isEditingPost: false,\n            editTitle: '',\n            editContent: ''\n        };\n    },\n    props: {\n        selectBoard: Object\n    },\n    mounted() {\n        this.commentList();\n    },\n    methods: {\n        toggleDropdown() {\n            this.dropdownVisible = !this.dropdownVisible;\n        },\n        editPost(post_id) {\n            this.editTitle = this.selectBoard.title;\n            this.editContent = this.stripHtml(this.selectBoard.content);\n            this.isEditingPost = true;\n            this.dropdownVisible = false;\n            this.$emit('updateStatusEdit',post_id)\n        },\n        cancelPostEdit() {\n            this.isEditingPost = false;\n        },\n        async savePostEdit() {\n            try {\n                const response = await axios.post('http://127.0.0.1:3000/postedit', {\n                    post_id: this.selectBoard.post_id,\n                    title: this.editTitle,\n                    content: this.editContent\n                });\n                if (response.data.status === 'success') {\n                    // this.selectBoard.title = this.editTitle;\n                    // this.selectBoard.content = this.editContent;\n                    this.isEditingPost = false;\n                } else {\n                    console.error('Failed to edit post');\n                }\n            } catch (error) {\n                console.error('Error editing post:', error);\n            }\n        },\n        async deletePost() {\n            if (confirm(\"삭제하시겠습니까?\")) {\n                try {\n                    const response = await axios.post('http://127.0.0.1:3000/postdelete', {\n                        post_id: this.selectBoard.post_id\n                    });\n                    if (response.data.status === 'success') {\n                        alert('게시글이 삭제되었습니다.');\n                        this.$emit('postDeleted', this.selectBoard.post_id);\n                    } else {\n                        console.error('Failed to delete post');\n                    }\n                } catch (error) {\n                    console.error('Error deleting post:', error);\n                }\n            }\n        },\n        toggleEdit(index) {\n            this.comments[index].isEditing = !this.comments[index].isEditing;\n            if (this.comments[index].isEditing) {\n                this.comments[index].editContent = this.comments[index].content;\n            }\n        },\n        cancelEdit(index) {\n            this.comments[index].isEditing = false;\n        },\n        async saveEdit(index, comment_id) {\n            if (confirm(\"수정하시겠습니까?\")) {\n                const editedComment = this.comments[index].editContent;\n                try {\n                    const response = await axios.post('http://127.0.0.1:3000/commentedit', {\n                        comment_id: comment_id,\n                        content: editedComment\n                    });\n                    if (response.data.status === 'success') {\n                        this.comments[index].content = editedComment;\n                        this.comments[index].isEditing = false;\n                    } else {\n                        console.error('Failed to edit comment');\n                    }\n                } catch (error) {\n                    console.error('Error editing comment:', error);\n                }\n            }\n        },\n        async commentDelete(index, comment_id) {\n            if (confirm(\"삭제하시겠습니까?\")) {\n                try {\n                    const response = await axios.post('http://127.0.0.1:3000/commentdelete', {\n                        comment_id: comment_id\n                    });\n                    if (response.data.status === 'success') {\n                        this.comments.splice(index, 1); // 배열에서 해당 댓글을 완전히 제거합니다.\n                        this.commentCount -= 1;         // 댓글 수를 하나 줄입니다.\n                    } else {\n                        console.error('Failed to delete comment');\n                    }\n                } catch (error) {\n                    console.error('Error deleting comment:', error);\n                }\n            }\n        },\n        updateComment(event) {\n            this.commentText = event.target.innerText;\n        },\n        formatDate(dateString) {\n            let date = new Date(dateString);\n            let year = date.getFullYear();\n            let month = ('0' + (date.getMonth() + 1)).slice(-2);\n            let day = ('0' + date.getDate()).slice(-2);\n            let hours = ('0' + date.getHours()).slice(-2);\n            let minutes = ('0' + date.getMinutes()).slice(-2);\n            return `${year}-${month}-${day} ${hours}:${minutes}`;\n        },\n        stripHtml(html) {\n            let doc = new DOMParser().parseFromString(html, 'text/html');\n            let text = doc.body.textContent || \"\";\n            return text;\n        },\n        async commentAdd(post_id) {\n            try {\n                const user_id = sessionStorage.getItem('user_id');\n                const comment = this.commentText;\n                const response = await axios.get(`http://127.0.0.1:3000/commentadd`, {\n                    params: {\n                        post_id: post_id,\n                        user_id: user_id,\n                        comment: comment\n                    }\n                });\n                if (response.data.status === 'success') {\n                    this.commentList();\n                    this.commentText = '';\n                    this.$refs.editableContent.innerText = '';\n                    this.commentCount = this.commentCount + 1;\n                    alert('댓글이 등록되었습니다.');\n                } else {\n                    console.log('댓글 등록 실패');\n                }\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            }\n        },\n        async commentList() {\n            try {\n                const response = await axios.get(`http://127.0.0.1:3000/commentlist`, {\n                    params: {\n                        post_id: this.selectBoard.post_id\n                    }\n                });\n                if (response.data.status === 'success') {\n                    this.comments = response.data.res.map(comment => ({\n                        ...comment,\n                        isEditing: false,\n                        editContent: ''\n                    }));\n                } else {\n                    console.error('Failed to fetch comments:', response.data.message);\n                }\n            } catch (error) {\n                console.error('Error fetching comments:', error);\n            }\n        }\n    }\n};\n</script>\n\n<style>\ndiv[contenteditable=\"true\"]:focus {\n    border-color: #5FC8A5;\n}\n</style> -->\n<template>\n    <div class=\"card border-success mb-3\" style=\"max-width: 100%\">\n        <div class=\"card-header d-flex\" style=\"justify-content: space-between;\">\n            {{ selectBoard.category_name }}\n            <p class=\"card-text\">{{ selectBoard.user_username }}</p>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between\">\n                <h4 class=\"card-title mt-3 mb-3\">{{ selectBoard.title }}</h4>\n                <div class=\"dropdown\">\n                    <div type=\"button\" @click=\"toggleDropdown\" style=\"cursor: pointer;\">\n                        <i class=\"bi bi-three-dots-vertical\"></i>\n                    </div>\n                    <div class=\"dropdown-menu show\" v-if=\"dropdownVisible\" >\n                        <button class=\"dropdown-item\" @click=\"editPost(selectBoard.board_id)\">수정</button>\n                        <button class=\"dropdown-item\" @click=\"deletePost\">삭제</button>\n                    </div>\n                </div>\n            </div>\n            <div>{{ stripHtml(selectBoard.content) }}</div>\n            <div v-if=\"isEditingPost\" class=\"d-flex justify-content-end mb-3\">\n                <button class=\"btn btn-primary btn-sm\" @click=\"savePostEdit\">저장</button>\n                <button class=\"btn btn-secondary btn-sm ms-2\" @click=\"cancelPostEdit\">취소</button>\n            </div>\n            <div class=\"d-flex mt-5\" style=\"justify-content: space-between;\">\n                <p class=\"text-body-tertiary pe-2 m-0\">{{ formatDate(selectBoard.create_date) }}</p>\n                <div class=\"d-flex justify-content-end\">\n                    <p class=\"text-body-tertiary pe-2 m-0\"><i class=\"bi bi-eye\"></i> {{ selectBoard.view_count + 1 }}</p>\n                    <p class=\"text-body-tertiary pe-2 m-0\"><i class=\"bi bi-chat-dots\"></i> {{ commentCount }} </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"card bg-light m-2\" style=\"max-width: 100%;\">\n            <div class=\"card-header\">댓글</div>\n            <div v-if=\"comments.length > 0\" class=\"d-flex p-3 pb-0 \" style=\"display:flex; flex-direction: column;\">\n                <div v-for=\"(commentdata, index) in comments\" :key=\"index\" class=\"card border-light mb-3\" style=\"max-width: 100%;\">\n                   <div class=\"card-body align-items-center\" style=\"display:flex;flex-direction: row;\">\n                        <img :src=\"require(`../../assets/img/${commentdata.img}`)\" style=\"width: 50px;border-radius: 50%;\">\n                        <div class=\"w-100 ps-4\">\n                            <div class=\"d-flex\" style=\"align-items: center;justify-content: space-between;\">\n                                <p style=\"font-weight: bold; margin:0;\">{{ commentdata.name }}</p>\n                                <div class=\"d-flex\" v-if=\"commentdata.name === user_name\">\n                                    <div type=\"button\" class=\"m-0\" style=\"font-size: 16px;\" @click=\"toggleEdit(index)\"><i class=\"bi bi-pencil-square\"></i></div>\n                                    <div type=\"button\" class=\"m-0 ms-1\" style=\"font-size: 16px;\" @click=\"commentDelete(index, commentdata.id)\"><i class=\"bi bi-trash\"></i></div>\n                                </div>\n                            </div>\n\n                            <div v-if=\"commentdata.isEditing\">\n                                <textarea v-model=\"commentdata.editContent\" class=\"form-control\" rows=\"2\"></textarea>\n                                <div class=\"d-flex mt-2 mb-2\" style=\"justify-content: flex-end;\">\n                                    <button class=\"btn btn-primary btn-sm \" @click=\"saveEdit(index, commentdata.id)\">수정</button>\n                                    <button class=\"btn btn-secondary btn-sm  ms-2\" @click=\"cancelEdit(index)\">취소</button>\n                                </div>\n                            </div>\n\n                            <p v-else class=\"card-text m-0\">{{ commentdata.content }}</p>\n\n                            <p class=\"text-body-tertiary m-0\" style=\"text-align: end; font-size: 13px;\">{{ formatDate(commentdata.create_date) }}</p>\n                        </div>\n                    </div>\n                </div>\n                <hr style=\"margin-bottom:0\"/>\n            </div>\n            <div class=\"card-body d-flex pb-0\">\n                <div class=\"d-flex\" style=\"align-items: flex-start\">\n                    <img :src=\"require(`../../assets/img/${user_img}`)\" style=\"width: 50px;border-radius: 50%;\">\n                </div>\n                <div class=\"form-control ms-2\" id=\"comment\" style=\"height: auto; min-height: 80px;\">\n                    <div contenteditable=\"false\" style=\"font-weight: bold;\">{{ user_name }}</div>\n                    <div contenteditable=\"true\" ref=\"editableContent\" @input=\"updateComment\" style=\"outline: none; border: 2px solid transparent;\"></div>\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-end\">\n                <button type=\"button\" class=\"btn btn-outline-primary m-3\" @click=\"commentAdd(selectBoard.board_id)\">등록</button> \n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            comments:[],\n            commentText: '',\n            user_img: sessionStorage.getItem('user_img'),\n            user_name: sessionStorage.getItem('user_name'),\n            commentCount: this.selectBoard.comment_count,\n            dropdownVisible: false,\n            isEditingPost: false,\n            editTitle: '',\n            editContent: ''\n        };\n    },\n    props: {\n        selectBoard:Object,\n    },\n    mounted() {\n        this.commentList();\n    },\n    methods:{\n        toggleEdit(index) {\n            this.comments[index].isEditing = !this.comments[index].isEditing;\n            if (this.comments[index].isEditing) {\n                this.comments[index].editContent = this.comments[index].content;\n            }\n        },\n        updateComment(event) {\n            this.commentText = event.target.innerText;\n        },\n        cancelEdit(index) {\n            this.comments[index].isEditing = false;\n        },\n        toggleDropdown() {\n            this.dropdownVisible = !this.dropdownVisible;\n        },\n        editPost(board_id) {\n            this.editTitle = this.selectBoard.title;\n            this.editContent = this.stripHtml(this.selectBoard.content);\n            this.isEditingPost = true;\n            this.dropdownVisible = false;\n            this.$emit('SelectPost',board_id, true)\n        },\n        cancelPostEdit() {\n            this.isEditingPost = false;\n        },\n        stripHtml(html) {\n            let doc = new DOMParser().parseFromString(html, 'text/html');\n            let text = doc.body.textContent || \"\";\n            return text;\n        },\n        formatDate(dateString) {\n            let date = new Date(dateString);\n            let year = date.getFullYear();\n            let month = ('0' + (date.getMonth() + 1)).slice(-2);\n            let day = ('0' + date.getDate()).slice(-2);\n            let hours = ('0' + date.getHours()).slice(-2);\n            let minutes = ('0' + date.getMinutes()).slice(-2);\n            return `${year}-${month}-${day} ${hours}:${minutes}`;\n        },\n        async commentList() {\n            try {\n                const response = await axios.get(`${this.$BackURL}/commentList`, {\n                    params: {\n                        board_id: this.selectBoard.board_id\n                    }\n                });\n                if (response.data.status === 'success') {\n                    this.comments = response.data.res.map(comment => ({\n                        ...comment,\n                        isEditing: false,\n                        editContent: ''\n                    }));\n                } else {\n                    console.error('Failed to fetch comments:', response.data.message);\n                }\n            } catch (error) {\n                console.error('Error fetching comments:', error);\n            }\n        },\n        async commentAdd(board_id) {\n            try {\n                const user_id = sessionStorage.getItem('user_id');\n                const comment = this.commentText;\n                const response = await axios.get(`${this.$BackURL}/commentAdd`, {\n                    params: {\n                        board_id: board_id,\n                        user_id: user_id,\n                        comment: comment\n                    }\n                });\n                if (response.data.status === 'success') {\n                    this.commentList();\n                    this.commentText = '';\n                    this.$refs.editableContent.innerText = '';\n                    this.commentCount = this.commentCount + 1;\n                    alert('댓글이 등록되었습니다.');\n                } else {\n                    console.log('댓글 등록 실패');\n                }\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            }\n        },\n    }\n}\n\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}