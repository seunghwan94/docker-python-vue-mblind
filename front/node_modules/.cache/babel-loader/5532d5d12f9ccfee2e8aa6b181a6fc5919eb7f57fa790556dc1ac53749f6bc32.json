{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex\",\n  style: {\n    \"flex-direction\": \"row\"\n  }\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, (value, key) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      type: \"button\",\n      class: _normalizeClass([\"btn btn-outline-primary m-2\", {\n        active: $data.selectedCategory === key\n      }]),\n      key: key,\n      onClick: $event => $options.selectCategory(key)\n    }, _toDisplayString(value), 11 /* TEXT, CLASS, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","categories","value","key","type","_normalizeClass","active","selectedCategory","onClick","$event","$options","selectCategory","_hoisted_2"],"sources":["/var/www/front/src/components/Board/MainBoard.vue"],"sourcesContent":["<template>\n    <div class=\"d-flex\" style=\"flex-direction: row;\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-primary m-2\"\n        :class=\"{ active: selectedCategory === key }\"\n        v-for=\"(value, key) in categories\"\n        :key=\"key\"\n        @click=\"selectCategory(key)\">\n        {{ value }}\n      </button>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        selectedCategory: 1, // 디폴트 값\n        categories: {\n          1: '자유게시판',\n          2: '서울',\n        }\n      }\n    },\n    methods: {\n      selectCategory(key) {\n        this.selectedCategory = key;\n      }\n    },\n  }\n  </script>\n  \n  <style>\n  /* 버튼 기본 스타일 */\n  .btn {\n    border-color: #007bff; /* 기본 버튼 테두리 색상 */\n    color: #007bff;        /* 기본 버튼 텍스트 색상 */\n  }\n  \n  /* 활성화된 버튼에 대한 스타일 정의 */\n  .btn.active {\n    background-color: #007bff; /* 활성화된 버튼의 배경색 */\n    color: white;              /* 활성화된 버튼의 글자색 */\n    border-color: #007bff;    /* 활성화된 버튼의 테두리 색상 */\n  }\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC,QAAQ;EAACC,KAA4B,EAA5B;IAAA;EAAA;;mBADxB;;uBACIC,mBAAA,CAUM,OAVNC,UAUM,I,kBATJD,mBAAA,CAQSE,SAAA,QAVfC,WAAA,CAM+BC,KAAA,CAAAC,UAAU,EANzC,CAMgBC,KAAK,EAAEC,GAAG;yBAJpBP,mBAAA,CAQS;MAPPQ,IAAI,EAAC,QAAQ;MACbV,KAAK,EAJbW,eAAA,EAIc,6BAA6B;QAAAC,MAAA,EACjBN,KAAA,CAAAO,gBAAgB,KAAKJ;MAAG;MAEzCA,GAAG,EAAEA,GAAG;MACRK,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc,CAACR,GAAG;wBACvBD,KAAK,gCAThBU,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}