{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ModalProfile',\n  data() {\n    return {\n      user_id: sessionStorage.getItem('user_id'),\n      user_img: ''\n    };\n  },\n  mounted() {\n    this.ProfileLoad();\n  },\n  methods: {\n    logout() {\n      if (confirm('logout을 진행하시겠습니까?')) {\n        sessionStorage.removeItem('user_id');\n        sessionStorage.removeItem('user_name');\n        this.user_id = null;\n        this.user_name = null;\n        window.location.reload();\n      }\n    },\n    ProfileLoad() {\n      axios.post('http://127.0.0.1:3000/profileload', {\n        user_id: this.user_id\n      }).then(res => {\n        if (res.data.status === 'success') {\n          console.log(res.data);\n          this.signUpName = '';\n          this.signUpID = '';\n          this.signUpPW = '';\n          this.confirmPW = '';\n          this.errorMessage = '';\n          alert('회원가입이 성공적으로 완료되었습니다.');\n\n          // 로그인 탭으로 전환\n          this.$nextTick(() => {\n            document.querySelector('a[href=\"#login\"]').click();\n          });\n        } else {\n          this.errorMessage = '존재하는 아이디입니다.';\n        }\n      }).catch(e => {\n        console.error('에러', e);\n        this.errorMessage = '서버에 연결할 수 없습니다.';\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","user_id","sessionStorage","getItem","user_img","mounted","ProfileLoad","methods","logout","confirm","removeItem","user_name","window","location","reload","post","then","res","status","console","log","signUpName","signUpID","signUpPW","confirmPW","errorMessage","alert","$nextTick","document","querySelector","click","catch","e","error"],"sources":["/var/www/front/src/components/Modal/ModalProfile.vue"],"sourcesContent":["<template>\n    <div class=\"modal-body\">\n        <!-- tab -->\n        <ul class=\"nav nav-tabs\" role=\"tablist\">\n          <li class=\"nav-item\" role=\"presentation\">\n              <a class=\"nav-link active\" data-bs-toggle=\"tab\" href=\"#profile\" aria-selected=\"false\" role=\"tab\" tabindex=\"-1\">Profile</a>\n          </li>\n        </ul>\n        <div id=\"myTabContent\" class=\"tab-content\">\n          <!-- 로그인 -->\n          <div class=\"tab-pane fade active show\" id=\"profile\" role=\"tabpanel\">\n              <div class=\"card border-success m-3\">\n              <img :src=\"require(`../../assets/img/${user_img}.png`)\" style=\"width: 50px;border-radius: 50%;\">\n              <div class=\"card-body\">\n                  <div class=\"form-floating mb-3\">\n                  <input type=\"email\" class=\"form-control\" id=\"LoginID\" v-model=\"loginID\" placeholder=\"LoginID\">\n                  <label for=\"LoginID\">아이디를 입력하세요.</label>\n                  </div>\n                  <div class=\"form-floating\">\n                  <input type=\"password\" class=\"form-control\" id=\"LoginPW\" v-model=\"loginPW\" placeholder=\"LoginPW\" autocomplete=\"off\">\n                  <label for=\"LoginPW\">비밀번호를 입력하세요.</label>\n                  </div>\n                  <!-- 오류 메시지 -->\n                  <div v-if=\"errorMessage\" class=\"alert alert-danger m-3\">\n                  <strong>{{ errorMessage }}</strong>\n                  </div>\n                  <div class=\"d-flex m-3\" style=\"justify-content: center;\">\n                  <button type=\"button\" class=\"btn btn-success\" @click=\"Login\">Login</button>\n                  </div>\n\n              </div>\n              </div>\n          </div>\n        </div>\n    </div>\n  </template>\n  <script>\n  import axios  from 'axios';\n\n  export default {\n    name: 'ModalProfile',\n    data() {\n      return{\n        user_id: sessionStorage.getItem('user_id'),\n        user_img: '',\n      }\n    },\n    mounted() {\n      this.ProfileLoad();\n    },\n    methods: {\n        logout() {\n          if (confirm('logout을 진행하시겠습니까?')) {\n            sessionStorage.removeItem('user_id');\n            sessionStorage.removeItem('user_name');\n            \n            this.user_id = null;\n            this.user_name = null;\n            \n            window.location.reload();\n          }\n        },\n        ProfileLoad() {\n        axios.post('http://127.0.0.1:3000/profileload', {\n          user_id: this.user_id\n        }).then(res => {\n          if (res.data.status === 'success') {\n            console.log(res.data)\n            this.signUpName = '';\n            this.signUpID = '';\n            this.signUpPW = '';\n            this.confirmPW = '';\n            this.errorMessage = '';\n\n            alert('회원가입이 성공적으로 완료되었습니다.');\n\n            // 로그인 탭으로 전환\n            this.$nextTick(() => {\n              document.querySelector('a[href=\"#login\"]').click();\n            });\n          } else {\n            this.errorMessage = '존재하는 아이디입니다.';\n          }\n        }).catch(e => {\n          console.error('에러', e); \n          this.errorMessage = '서버에 연결할 수 없습니다.';\n        });\n      }\n    }\n  };\n  </script>\n  \n  <style>\n\n  </style>"],"mappings":"AAqCE,OAAOA,KAAI,MAAQ,OAAO;AAE1B,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAM;MACJC,OAAO,EAAEC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;MAC1CC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACLC,MAAMA,CAAA,EAAG;MACP,IAAIC,OAAO,CAAC,mBAAmB,CAAC,EAAE;QAChCP,cAAc,CAACQ,UAAU,CAAC,SAAS,CAAC;QACpCR,cAAc,CAACQ,UAAU,CAAC,WAAW,CAAC;QAEtC,IAAI,CAACT,OAAM,GAAI,IAAI;QACnB,IAAI,CAACU,SAAQ,GAAI,IAAI;QAErBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B;IACF,CAAC;IACDR,WAAWA,CAAA,EAAG;MACdR,KAAK,CAACiB,IAAI,CAAC,mCAAmC,EAAE;QAC9Cd,OAAO,EAAE,IAAI,CAACA;MAChB,CAAC,CAAC,CAACe,IAAI,CAACC,GAAE,IAAK;QACb,IAAIA,GAAG,CAACjB,IAAI,CAACkB,MAAK,KAAM,SAAS,EAAE;UACjCC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACjB,IAAI;UACpB,IAAI,CAACqB,UAAS,GAAI,EAAE;UACpB,IAAI,CAACC,QAAO,GAAI,EAAE;UAClB,IAAI,CAACC,QAAO,GAAI,EAAE;UAClB,IAAI,CAACC,SAAQ,GAAI,EAAE;UACnB,IAAI,CAACC,YAAW,GAAI,EAAE;UAEtBC,KAAK,CAAC,sBAAsB,CAAC;;UAE7B;UACA,IAAI,CAACC,SAAS,CAAC,MAAM;YACnBC,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC,CAACC,KAAK,CAAC,CAAC;UACpD,CAAC,CAAC;QACJ,OAAO;UACL,IAAI,CAACL,YAAW,GAAI,cAAc;QACpC;MACF,CAAC,CAAC,CAACM,KAAK,CAACC,CAAA,IAAK;QACZb,OAAO,CAACc,KAAK,CAAC,IAAI,EAAED,CAAC,CAAC;QACtB,IAAI,CAACP,YAAW,GAAI,iBAAiB;MACvC,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}