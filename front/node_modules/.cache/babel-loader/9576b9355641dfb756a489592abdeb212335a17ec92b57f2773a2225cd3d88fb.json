{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\n// import axios  from 'axios';\n\nexport default {\n  name: 'ModalProfile',\n  data() {\n    return {\n      user_id: sessionStorage.getItem('user_id'),\n      user_name: sessionStorage.getItem('user_name'),\n      user_img: sessionStorage.getItem('user_img')\n    };\n  },\n  // mounted() {\n  //   this.ProfileLoad();\n  // },\n  methods: {\n    logout() {\n      if (confirm('logout을 진행하시겠습니까?')) {\n        sessionStorage.removeItem('user_id');\n        sessionStorage.removeItem('user_name');\n        this.user_id = null;\n        this.user_name = null;\n        window.location.reload();\n      }\n    },\n    selectImage() {\n      this.$refs.fileInput.click();\n    },\n    onFileChange(event) {\n      const file = event.target.files[0];\n      if (file) {\n        // 파일이 선택되었을 때 URL을 생성하여 이미지 src를 업데이트\n        this.imageUrl = URL.createObjectURL(file);\n\n        // 실제 파일 업로드 로직을 여기에 추가할 수 있습니다.\n      }\n    }\n    // ProfileLoad() {\n    // axios.post('http://127.0.0.1:3000/profileload', {\n    //   user_id: this.user_id\n    // }).then(res => {\n    //   if (res.data.status === 'success') {\n    //     console.log(res.data);\n    //     this.user_img = res.data[0].img;\n\n    //   } else {\n    //     this.errorMessage = '데이터 오류.';\n    //   }\n    // }).catch(e => {\n    //   console.error('에러', e); \n    //   this.errorMessage = '서버에 연결할 수 없습니다.';\n    // });\n    // }\n  }\n};","map":{"version":3,"names":["name","data","user_id","sessionStorage","getItem","user_name","user_img","methods","logout","confirm","removeItem","window","location","reload","selectImage","$refs","fileInput","click","onFileChange","event","file","target","files","imageUrl","URL","createObjectURL"],"sources":["/var/www/front/src/components/Modal/ModalProfile.vue"],"sourcesContent":["<template>\n    <div class=\"modal-body\">\n        <!-- tab -->\n        <ul class=\"nav nav-tabs\" role=\"tablist\">\n          <li class=\"nav-item\" role=\"presentation\">\n              <a class=\"nav-link active\" data-bs-toggle=\"tab\" href=\"#profile\" aria-selected=\"false\" role=\"tab\" tabindex=\"-1\">Profile</a>\n          </li>\n        </ul>\n        <div id=\"myTabContent\" class=\"tab-content\">\n          <!-- 로그인 -->\n          <div class=\"tab-pane fade active show\" id=\"profile\" role=\"tabpanel\">\n              <div class=\"card border-success m-3\">\n                <div class=\"d-flex align-items-center\">\n                  <img :src=\"require(`../../assets/img/${user_img}`)\" style=\"width: 50%; border-radius: 50%; cursor: pointer;\" @click=\"selectImage\">\n                    <input type=\"file\" ref=\"fileInput\" @change=\"onFileChange\" style=\"display: none;\"accept=\"image/*\">\n                </div>\n                <div class=\"card-body\">\n                    <label class=\"form-label mt-4\">이름</label>\n                    <div class=\"form-floating mb-3\">\n                      <input type=\"text\" class=\"form-control\" id=\"user_name\" v-model=\"user_name\" placeholder=\"user_name\">\n                      <label for=\"user_name\">이름</label>\n                    </div>\n                    <label class=\"form-label mt-4\">비밀번호 변경</label>\n                    <div class=\"form-floating\">\n                      <input type=\"password\" class=\"form-control\" id=\"LoginPW\" v-model=\"loginPW\" placeholder=\"LoginPW\" autocomplete=\"off\">\n                      <label for=\"LoginPW\">기존 비밀번호를 입력하세요.</label>\n                    </div>\n                    <div class=\"form-floating mt-4\">\n                      <input type=\"password\" class=\"form-control\" id=\"newLoginPW\" v-model=\"newLoginPW\" placeholder=\"LoginPW\" autocomplete=\"off\">\n                      <label for=\"newLoginPW\">새 비밀번호를 입력하세요.</label>\n                    </div>\n                    <div class=\"form-floating mt-4\">\n                      <input type=\"password\" class=\"form-control\" id=\"newLoginPWChack\" v-model=\"newLoginPWChack\" placeholder=\"LoginPW\" autocomplete=\"off\">\n                      <label for=\"newLoginPWChack\">새 비밀번호 확인</label>\n                    </div>\n                    <!-- 오류 메시지 -->\n                    <div v-if=\"errorMessage\" class=\"alert alert-danger m-3\">\n                    <strong>{{ errorMessage }}</strong>\n                    </div>\n                    <div class=\"d-flex m-3\" style=\"justify-content: center;\">\n                    <button type=\"button\" class=\"btn btn-success\" @click=\"Login\">Login</button>\n                    </div>\n\n                </div>\n              </div>\n          </div>\n        </div>\n    </div>\n  </template>\n  <script>\n  // import axios  from 'axios';\n\n  export default {\n    name: 'ModalProfile',\n    data() {\n      return{\n        user_id: sessionStorage.getItem('user_id'),\n        user_name: sessionStorage.getItem('user_name'),\n        user_img: sessionStorage.getItem('user_img'),\n      }\n    },\n    // mounted() {\n    //   this.ProfileLoad();\n    // },\n    methods: {\n        logout() {\n          if (confirm('logout을 진행하시겠습니까?')) {\n            sessionStorage.removeItem('user_id');\n            sessionStorage.removeItem('user_name');\n            \n            this.user_id = null;\n            this.user_name = null;\n            \n            window.location.reload();\n          }\n        },\n        selectImage() {\n          this.$refs.fileInput.click();\n        },\n        onFileChange(event) {\n          const file = event.target.files[0];\n          if (file) {\n            // 파일이 선택되었을 때 URL을 생성하여 이미지 src를 업데이트\n            this.imageUrl = URL.createObjectURL(file);\n            \n            // 실제 파일 업로드 로직을 여기에 추가할 수 있습니다.\n          }\n        }\n        // ProfileLoad() {\n        // axios.post('http://127.0.0.1:3000/profileload', {\n        //   user_id: this.user_id\n        // }).then(res => {\n        //   if (res.data.status === 'success') {\n        //     console.log(res.data);\n        //     this.user_img = res.data[0].img;\n\n\n        //   } else {\n        //     this.errorMessage = '데이터 오류.';\n        //   }\n        // }).catch(e => {\n        //   console.error('에러', e); \n        //   this.errorMessage = '서버에 연결할 수 없습니다.';\n        // });\n      // }\n    }\n  };\n  </script>\n  \n  <style>\n\n  </style>"],"mappings":";;;AAkDE;;AAEA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAM;MACJC,OAAO,EAAEC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;MAC1CC,SAAS,EAAEF,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;MAC9CE,QAAQ,EAAEH,cAAc,CAACC,OAAO,CAAC,UAAU;IAC7C;EACF,CAAC;EACD;EACA;EACA;EACAG,OAAO,EAAE;IACLC,MAAMA,CAAA,EAAG;MACP,IAAIC,OAAO,CAAC,mBAAmB,CAAC,EAAE;QAChCN,cAAc,CAACO,UAAU,CAAC,SAAS,CAAC;QACpCP,cAAc,CAACO,UAAU,CAAC,WAAW,CAAC;QAEtC,IAAI,CAACR,OAAM,GAAI,IAAI;QACnB,IAAI,CAACG,SAAQ,GAAI,IAAI;QAErBM,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B;IACF,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC;IAC9B,CAAC;IACDC,YAAYA,CAACC,KAAK,EAAE;MAClB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR;QACA,IAAI,CAACG,QAAO,GAAIC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;;QAEzC;MACF;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}