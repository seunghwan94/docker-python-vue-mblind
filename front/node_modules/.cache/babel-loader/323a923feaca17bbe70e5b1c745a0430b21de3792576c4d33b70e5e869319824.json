{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card bg-light m-2\",\n  style: {\n    \"max-width\": \"100%\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header\"\n}, \"댓글\", -1 /* HOISTED */);\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [..._hoisted_3]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3"],"sources":["/var/www/front/src/components/Board/BoardComment.vue"],"sourcesContent":["<template>\n    <div class=\"card bg-light m-2\" style=\"max-width: 100%;\">\n        <div class=\"card-header\">댓글</div>\n    </div>\n\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n    props:{\n        board_id: String,\n    },\n    data(){\n        return{\n\n        }\n    },\n    mounted() {\n        this.commentList();\n    },\n    methods: {\n        async commentList() {\n            try {\n                const response = await axios.get(`${this.$BackURL}/commentList`, {\n                    params: {\n                        board_id: this.board_id\n                    }\n                });\n                if (response.data.status === 'success') {\n                    this.comments = response.data.res.map(comment => ({\n                        ...comment,\n                        isEditing: false,\n                        editContent: ''\n                    }));\n                } else {\n                    console.error('Failed to fetch comments:', response.data.message);\n                }\n            } catch (error) {\n                console.error('Error fetching comments:', error);\n            }\n        },\n    }\n}\n</script>\n<style>\n\n</style>"],"mappings":";;EACSA,KAAK,EAAC,mBAAmB;EAACC,KAAwB,EAAxB;IAAA;EAAA;;gCAC3BC,mBAAA,CAAiC;EAA5BF,KAAK,EAAC;AAAa,GAAC,IAAE;oBAA3BG,UAAiC,C;;uBADrCC,mBAAA,CAEM,OAFNC,UAEM,EAHV,IAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}