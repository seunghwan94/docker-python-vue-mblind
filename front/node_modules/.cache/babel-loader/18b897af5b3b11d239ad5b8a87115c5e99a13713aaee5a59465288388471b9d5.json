{"ast":null,"code":"import axios from 'axios';\nimport BoardList from './BoardList.vue';\nexport default {\n  data() {\n    return {\n      selectedCategory: '1',\n      categories: {},\n      posts: [],\n      // 게시글 데이터를 저장할 배열\n      totalPosts: 0,\n      // 전체 게시글 수\n      currentPage: 1,\n      // 현재 페이지\n      perPage: 10 // 페이지당 게시글 수\n    };\n  },\n  created() {\n    this.fetchCategories(); // 카테고리 목록 가져오기\n    this.fetchboard(1, this.currentPage);\n  },\n  methods: {\n    selectCategory(key) {\n      this.selectedCategory = key;\n    },\n    async fetchCategories() {\n      try {\n        const response = await axios.post(`${this.$BackURl}/category`);\n        if (response.data.status === 'success') {\n          const categories = response.data.res.reduce((acc, category) => {\n            acc[category.id] = category.name;\n            return acc;\n          }, {});\n          this.categories = categories;\n        } else {\n          console.error('Failed to fetch categories:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    },\n    async fetchboard(categoryId, page) {\n      console.log('ss');\n      try {\n        const response = await axios.get(`${this.$BackURl}/boardList`, {\n          params: {\n            category_id: categoryId,\n            page: page,\n            per_page: this.perPage\n          }\n        });\n        console.log(response.data);\n        if (response.data.status === 'success') {\n          this.posts = response.data.res;\n        } else {\n          this.posts = [];\n        }\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    }\n  },\n  components: {\n    BoardList\n  }\n};","map":{"version":3,"names":["axios","BoardList","data","selectedCategory","categories","posts","totalPosts","currentPage","perPage","created","fetchCategories","fetchboard","methods","selectCategory","key","response","post","$BackURl","status","res","reduce","acc","category","id","name","console","error","message","categoryId","page","log","get","params","category_id","per_page","components"],"sources":["/var/www/front/src/components/Board/MainBoard.vue"],"sourcesContent":["<template>\n    <div class=\"d-flex\" style=\"flex-direction: row;\">\n        <!-- {{posts}} -->\n        <button\n            type=\"button\"\n            class=\"btn btn-outline-primary m-2\"\n            :class=\"{ active: selectedCategory === key }\"\n            v-for=\"(value, key) in categories\"\n            :key=\"key\"\n            @click=\"selectCategory(key)\">\n            {{ value }}\n        </button>\n        \n\n    </div>\n    <BoardList :posts=\"posts\"/>\n</template>\n\n<script>\nimport axios  from 'axios';\nimport BoardList from './BoardList.vue';\n\nexport default {\n    data() {\n        return {\n            selectedCategory: '1',\n            categories: {},\n            posts: [],        // 게시글 데이터를 저장할 배열\n            totalPosts: 0,    // 전체 게시글 수\n            currentPage: 1,   // 현재 페이지\n            perPage: 10,      // 페이지당 게시글 수\n        }\n    },\n    created() {\n        this.fetchCategories(); // 카테고리 목록 가져오기\n        this.fetchboard(1,this.currentPage);\n    },\n    methods: {\n        selectCategory(key) {\n            this.selectedCategory = key;\n        },\n        async fetchCategories() {\n            try {\n                const response = await axios.post(`${this.$BackURl}/category`);\n                if (response.data.status === 'success') {\n                    const categories = response.data.res.reduce((acc, category) => {\n                        acc[category.id] = category.name;\n                        return acc;\n                    }, {});\n                    this.categories = categories;\n                } else {\n                    console.error('Failed to fetch categories:', response.data.message);\n                }\n            } catch (error) {\n                console.error('Error fetching categories:', error);\n            }\n        },\n        async fetchboard(categoryId, page) {\n            console.log('ss');\n            try {\n                const response = await axios.get(`${this.$BackURl}/boardList`, {\n                    params: {\n                        category_id: categoryId,\n                        page: page,\n                        per_page: this.perPage\n                    }\n                });\n                console.log(response.data);\n                if (response.data.status === 'success') {\n                    this.posts = response.data.res;\n                } else {\n                    this.posts = [];\n                }\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            }\n        }\n    },\n    components:{\n        BoardList,\n    }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":"AAmBA,OAAOA,KAAI,MAAQ,OAAO;AAC1B,OAAOC,SAAQ,MAAO,iBAAiB;AAEvC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,gBAAgB,EAAE,GAAG;MACrBC,UAAU,EAAE,CAAC,CAAC;MACdC,KAAK,EAAE,EAAE;MAAS;MAClBC,UAAU,EAAE,CAAC;MAAK;MAClBC,WAAW,EAAE,CAAC;MAAI;MAClBC,OAAO,EAAE,EAAE,CAAO;IACtB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,eAAe,CAAC,CAAC,EAAE;IACxB,IAAI,CAACC,UAAU,CAAC,CAAC,EAAC,IAAI,CAACJ,WAAW,CAAC;EACvC,CAAC;EACDK,OAAO,EAAE;IACLC,cAAcA,CAACC,GAAG,EAAE;MAChB,IAAI,CAACX,gBAAe,GAAIW,GAAG;IAC/B,CAAC;IACD,MAAMJ,eAAeA,CAAA,EAAG;MACpB,IAAI;QACA,MAAMK,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAAC,GAAG,IAAI,CAACC,QAAQ,WAAW,CAAC;QAC9D,IAAIF,QAAQ,CAACb,IAAI,CAACgB,MAAK,KAAM,SAAS,EAAE;UACpC,MAAMd,UAAS,GAAIW,QAAQ,CAACb,IAAI,CAACiB,GAAG,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;YAC3DD,GAAG,CAACC,QAAQ,CAACC,EAAE,IAAID,QAAQ,CAACE,IAAI;YAChC,OAAOH,GAAG;UACd,CAAC,EAAE,CAAC,CAAC,CAAC;UACN,IAAI,CAACjB,UAAS,GAAIA,UAAU;QAChC,OAAO;UACHqB,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEX,QAAQ,CAACb,IAAI,CAACyB,OAAO,CAAC;QACvE;MACJ,EAAE,OAAOD,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC;IACD,MAAMf,UAAUA,CAACiB,UAAU,EAAEC,IAAI,EAAE;MAC/BJ,OAAO,CAACK,GAAG,CAAC,IAAI,CAAC;MACjB,IAAI;QACA,MAAMf,QAAO,GAAI,MAAMf,KAAK,CAAC+B,GAAG,CAAC,GAAG,IAAI,CAACd,QAAQ,YAAY,EAAE;UAC3De,MAAM,EAAE;YACJC,WAAW,EAAEL,UAAU;YACvBC,IAAI,EAAEA,IAAI;YACVK,QAAQ,EAAE,IAAI,CAAC1B;UACnB;QACJ,CAAC,CAAC;QACFiB,OAAO,CAACK,GAAG,CAACf,QAAQ,CAACb,IAAI,CAAC;QAC1B,IAAIa,QAAQ,CAACb,IAAI,CAACgB,MAAK,KAAM,SAAS,EAAE;UACpC,IAAI,CAACb,KAAI,GAAIU,QAAQ,CAACb,IAAI,CAACiB,GAAG;QAClC,OAAO;UACH,IAAI,CAACd,KAAI,GAAI,EAAE;QACnB;MACJ,EAAE,OAAOqB,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ;EACJ,CAAC;EACDS,UAAU,EAAC;IACPlC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}