{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2d2ce2b2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"editor mt-3\"\n};\nconst _hoisted_2 = {\n  class: \"d-flex mt-2 mb-3\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\",\n  disabled: \"\"\n}, \"카테고리\", -1 /* HOISTED */));\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = {\n  ref: \"editorElement\",\n  class: \"editor-content\"\n};\nconst _hoisted_6 = {\n  class: \"d-flex justify-content-end\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BoardWriteBar = _resolveComponent(\"BoardWriteBar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [$setup.editor ? (_openBlock(), _createBlock(_component_BoardWriteBar, {\n    key: 0,\n    editor: $setup.editor\n  }, null, 8 /* PROPS */, [\"editor\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.category = $event),\n    class: \"form-select w-25 me-1\",\n    id: \"Category\"\n  }, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredCategories, (value, key) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: key,\n      value: key\n    }, _toDisplayString(value), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.category]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.title = $event),\n    class: \"form-control\",\n    placeholder: \"제목을 입력하세요\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.title]])]), _createElementVNode(\"div\", _hoisted_5, null, 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary mt-3 mb-3\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.handleSubmit && $setup.handleSubmit(...args))\n  }, _toDisplayString($props.selectBoard ? '편집' : '게시'), 1 /* TEXT */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","value","disabled","ref","_createElementBlock","_Fragment","_hoisted_1","$setup","editor","_createBlock","_component_BoardWriteBar","key","_createCommentVNode","_hoisted_2","_cache","$event","category","id","_hoisted_3","_renderList","$options","filteredCategories","_hoisted_4","title","placeholder","_hoisted_5","_hoisted_6","type","onClick","args","handleSubmit","$props","selectBoard"],"sources":["/var/www/front/src/components/Board/BoardWrite.vue"],"sourcesContent":["<template>\n  <div class=\"editor mt-3\">\n    <BoardWriteBar v-if=\"editor\" :editor=\"editor\" />\n    <div class=\"d-flex mt-2 mb-3\">\n      <select v-model=\"category\" class=\"form-select w-25 me-1\" id=\"Category\">\n        <option value=\"\" disabled>카테고리</option>\n        <option v-for=\"(value, key) in filteredCategories\" :key=\"key\" :value=\"key\">{{ value }}</option>\n      </select>\n      <input v-model=\"title\" class=\"form-control\" placeholder=\"제목을 입력하세요\">\n    </div>\n    <div ref=\"editorElement\" class=\"editor-content\"></div>\n  </div>\n  <div class=\"d-flex justify-content-end\">\n    <button type=\"button\" class=\"btn btn-primary mt-3 mb-3\" @click=\"handleSubmit\">\n      {{ selectBoard ? '편집' : '게시' }}\n    </button>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { ref, onMounted, onBeforeUnmount, computed } from \"vue\";\nimport { Editor } from \"@tiptap/vue-3\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Underline from \"@tiptap/extension-underline\";\nimport TextAlign from \"@tiptap/extension-text-align\";\nimport Link from \"@tiptap/extension-link\";\nimport Image from \"@tiptap/extension-image\";\nimport BoardWriteBar from \"./BoardWriteBar.vue\";\n\nexport default {\n  components: {\n    BoardWriteBar,\n  },\n  computed: {\n    // 전체 카테고리 지우기\n    filteredCategories() {\n      return Object.entries(this.categories).reduce((acc, [key, value]) => {\n        if (key !== '0') {\n          acc[key] = value;\n        }\n        return acc;\n      }, {});\n    }\n  },\n  setup(props) {\n    const editor = ref(null);\n    const editorElement = ref(null);\n    const title = ref(props.selectBoard?.title || \"\");\n    const category = ref(props.selectBoard?.category_id || \"\");\n    const user_id = ref(sessionStorage.getItem(\"user_id\"));\n    const isEditMode = computed(() => !!props.selectBoard); // 편집 모드인지 확인\n    const content = computed(() => props.selectBoard?.content || \"<p>여기에 내용을 입력하세요.</p>\");\n\n    onMounted(() => {\n      editor.value = new Editor({\n        element: editorElement.value,\n        extensions: [StarterKit, Underline, TextAlign, Link, Image],\n        content: content.value,\n      });\n    });\n\n    onBeforeUnmount(() => {\n      if (editor.value) {\n        editor.value.destroy();\n      }\n    });\n\n    const handleSubmit = () => {\n      const postContent = editor.value.getHTML();\n      if (!title.value || !category.value || !postContent) {\n        return alert(\"모든 필드를 입력해주세요.\");\n      }\n\n      const payload = {\n        title: title.value,\n        content: postContent,\n        category: category.value,\n        user_id: user_id.value,\n      };\n\n      const apiURL = isEditMode.value ? `${props.BackURL}/boardPosttingEdit` : `${props.BackURL}/boardPostting`;\n\n      // 편집 시 board_id 포함\n      if (isEditMode.value) { payload.board_id = props.selectBoard.board_id; }\n\n      axios.post(apiURL, payload)\n        .then((res) => {\n          if (res.data.status === \"success\") {\n            alert(isEditMode.value ? \"게시글이 수정되었습니다.\" : \"게시글이 작성되었습니다.\");\n            window.location.reload();\n          } else {\n            alert(\"처리 중 오류가 발생했습니다.\");\n          }\n        })\n        .catch(() => alert(\"서버 오류가 발생했습니다.\"));\n    };\n\n    return { editor, editorElement, title, category, handleSubmit };\n  },\n  props: {\n    categories: Object,\n    BackURL: String,\n    selectBoard: Object,\n  },\n};\n</script>\n\n<style scoped>\n.editor {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-height: 50vh;\n  padding: 16px;\n}\n.editor-content {\n  min-height: 200px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAkB;gEAEzBC,mBAAA,CAAuC;EAA/BC,KAAK,EAAC,EAAE;EAACC,QAAQ,EAAR;GAAS,MAAI;mBALtC;;EAUSC,GAAG,EAAC,eAAe;EAACJ,KAAK,EAAC;;;EAE5BA,KAAK,EAAC;AAA4B;;;uBAZzCK,mBAAA,CAAAC,SAAA,SACEL,mBAAA,CAUM,OAVNM,UAUM,GATiBC,MAAA,CAAAC,MAAM,I,cAA3BC,YAAA,CAAgDC,wBAAA;IAFpDC,GAAA;IAEkCH,MAAM,EAAED,MAAA,CAAAC;yCAF1CI,mBAAA,gBAGIZ,mBAAA,CAMM,OANNa,UAMM,G,gBALJb,mBAAA,CAGS;IAPf,uBAAAc,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIuBR,MAAA,CAAAS,QAAQ,GAAAD,MAAA;IAAEhB,KAAK,EAAC,uBAAuB;IAACkB,EAAE,EAAC;MAC1DC,UAAuC,G,kBACvCd,mBAAA,CAA+FC,SAAA,QANvGc,WAAA,CAMuCC,QAAA,CAAAC,kBAAkB,EANzD,CAMwBpB,KAAK,EAAEU,GAAG;yBAA1BP,mBAAA,CAA+F;MAA3CO,GAAG,EAAEA,GAAG;MAAGV,KAAK,EAAEU;wBAAQV,KAAK,wBAN3FqB,UAAA;2EAIuBf,MAAA,CAAAS,QAAQ,E,mBAIzBhB,mBAAA,CAAoE;IAR1E,uBAAAc,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQsBR,MAAA,CAAAgB,KAAK,GAAAR,MAAA;IAAEhB,KAAK,EAAC,cAAc;IAACyB,WAAW,EAAC;iDAAxCjB,MAAA,CAAAgB,KAAK,E,KAEvBvB,mBAAA,CAAsD,OAAtDyB,UAAsD,8B,GAExDzB,mBAAA,CAIM,OAJN0B,UAIM,GAHJ1B,mBAAA,CAES;IAFD2B,IAAI,EAAC,QAAQ;IAAC5B,KAAK,EAAC,2BAA2B;IAAE6B,OAAK,EAAAd,MAAA,QAAAA,MAAA,UAAAe,IAAA,KAAEtB,MAAA,CAAAuB,YAAA,IAAAvB,MAAA,CAAAuB,YAAA,IAAAD,IAAA,CAAY;sBACvEE,MAAA,CAAAC,WAAW,+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}